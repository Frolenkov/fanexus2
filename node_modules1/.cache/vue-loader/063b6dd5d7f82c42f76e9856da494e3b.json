{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\Projects\\fanexus\\src\\views\\Blog.vue?vue&type=style&index=0&id=781941dc&lang=scss&scoped=true&","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\views\\Blog.vue","mtime":1590566164929},{"path":"I:\\Projects\\fanexus\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouYmxvZyB7DQogIGdyaWQtYXJlYTogY29udGVudDsNCiAgb3ZlcmZsb3c6IGF1dG87DQogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLUJHLXByaW1hcnkpOw0KDQogICYtaGVhZGVyIHsNCiAgICBkaXNwbGF5OiBncmlkOw0KICAgIGFsaWduLWl0ZW1zOiBlbmQ7DQogICAgZ3JpZC10ZW1wbGF0ZS1yb3dzOiBtaW5tYXgoMCwgNjBweCk7DQogICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiB2YXIoLS13aWR0aC1zbWFsbCkgbWF4LWNvbnRlbnQgdmFyKC0td2lkdGgtc21hbGwpOw0KICAgIGdyaWQtZ2FwOiB2YXIoLS1lbGVtZW50LW1hcmdpbi14bCk7DQogICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tQkctYmxvZy1wb3N0KTsNCiAgICBwYWRkaW5nOiAwIHZhcigtLWVsZW1lbnQtcGFkZGluZy14bCk7DQogICAgbWFyZ2luLWJvdHRvbTogdmFyKC0tZWxlbWVudC1tYXJnaW4teGwpOw0KICAgICZfX2F2YXRhciB7DQogICAgICBib3JkZXI6IHZhcigtLWJvcmRlci13aWR0aC1hdmF0YXIpIHNvbGlkIHZhcigtLWNvbG9yLXdoaXRlKTsNCiAgICB9DQogIH0NCiAgJi1jb250ZW50IHsNCiAgICBwYWRkaW5nOiAwIHZhcigtLWVsZW1lbnQtcGFkZGluZy14bCk7DQogICAgZGlzcGxheTogZ3JpZDsNCiAgICBncmlkLWNvbHVtbi1nYXA6IHZhcigtLWVsZW1lbnQtbWFyZ2luLXhsKTsNCiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHZhcigtLXdpZHRoLXNtYWxsKSBhdXRvIHZhcigtLXdpZHRoLXNtYWxsKTsNCiAgfQ0KfQ0K"},{"version":3,"sources":["Blog.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4NA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Blog.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div v-if=\"data\" class=\"blog\">\r\n    <wallpaper v-if=\"data.coverImage\" :src=\"data.coverImage.src\" />\r\n    <add-image v-else buttonText=\"Add Background\" />\r\n    <div class=\"blog-header\">\r\n      <avatar\r\n        class=\"blog-header__avatar\"\r\n        size=\"xl\"\r\n        :file=\"data.Alias.avatar.src\"\r\n        v-if=\"data.Alias.avatar\"\r\n      />\r\n      <add-image class=\"addAvatar\" buttonText=\"Add Image\" v-else />\r\n      <tabs\r\n        :tabs=\"navTabs\"\r\n        @selectTab=\"$active => setComponent($active, $active)\"\r\n        :active=\"activeTab\"\r\n      />\r\n    </div>\r\n    <div class=\"blog-content\">\r\n      <div class=\"blog-wrapper\">\r\n        <sidebar-form v-if=\"sidebarCreate\" />\r\n        <sidebar-info\r\n          :name=\"data.name\"\r\n          :description=\"data.description\"\r\n          :links=\"data.links\"\r\n          v-else\r\n        />\r\n      </div>\r\n      <div class=\"blog-main\">\r\n        <component\r\n          :current-page=\"currentPage\"\r\n          @onPageChange=\"onPageChange\"\r\n          :blogPosts=\"data.BlogPosts\"\r\n          :is=\"currentComponent\"\r\n          @openModal=\"handleModalOpen\"\r\n        />\r\n      </div>\r\n      <div class=\"blog-wrapper\">\r\n        <sidebar-tags\r\n          :tags=\"data.Tags\"\r\n          createText=\"Tags of your posts will be shown here. You may add them, but others will see them only when you use them in your posts.\"\r\n        />\r\n      </div>\r\n    </div>\r\n    <!-- /*@TODO add close callback*/ -->\r\n    <create-privacy-group-modal :settings=\"modalSettings[modalType]\" />\r\n    <share-post-modal\r\n      :data=\"sharePostModalData\"\r\n      :settings=\"sharePostModalSettings\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport getComponentsByPrefix from '@/utils/getComponentsByPrefix';\r\nimport {\r\n  blogRoot,\r\n  blogModalTypes,\r\n  blogAreas,\r\n  getBlog\r\n} from '@/services/blog.service';\r\nimport Avatar from '~common/Avatar';\r\nimport Tabs from '~common/Tabs';\r\nimport tabsMixin from '@/mixins/tabs.mixin';\r\nimport SidebarInfo from '~common/SidebarInfo';\r\nimport SidebarTags from '~common/SidebarTags';\r\nimport SharePostModal from '@/components/Blog/SharePostModal';\r\nimport CreatePrivacyGroupModal from '@/components/Blog/CreatePrivacyGroupModal';\r\n// blogAreas\r\nimport BlogAllPosts from '@/components/Blog/BlogAllPosts';\r\nimport BlogSettings from '@/components/Blog/BlogSettings';\r\nimport BlogPrivacyGroup from '@/components/Blog/BlogPrivacyGroup';\r\nimport SidebarForm from '~common/SidebarForm';\r\nimport Wallpaper from '~common/Wallpaper';\r\nimport AddImage from '~common/AddImage';\r\n\r\nexport default {\r\n  props: {\r\n    name: {\r\n      required: true\r\n    },\r\n    // @TODO revise it\r\n    sidebarCreate: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  components: {\r\n    SharePostModal,\r\n    CreatePrivacyGroupModal,\r\n    Avatar,\r\n    Tabs,\r\n    SidebarInfo,\r\n    SidebarTags,\r\n    // blogAreas (the order should be strict)\r\n    BlogAllPosts,\r\n    BlogSettings,\r\n    BlogPrivacyGroup,\r\n    Wallpaper,\r\n    SidebarForm,\r\n    AddImage\r\n  },\r\n  mixins: [tabsMixin],\r\n  data() {\r\n    return {\r\n      data: null,\r\n      currentPage: 1,\r\n      activeTab: 0,\r\n      currentComponent: null,\r\n      /*@TODO revise*/\r\n      navTabs: [\r\n        {\r\n          title: 'All Posts',\r\n          component: blogAreas.allPosts\r\n        },\r\n        {\r\n          title: 'Settings',\r\n          component: blogAreas.settings\r\n        },\r\n        {\r\n          title: 'Privacy group',\r\n          component: blogAreas.privacyGroup\r\n        }\r\n      ],\r\n      // @TODO revise it\r\n      sharePostModalSettings: {\r\n        show: false,\r\n        title: 'Share post',\r\n        dismissText: 'Cancel',\r\n        actionText: 'Share'\r\n      },\r\n      sharePostModalData: {\r\n        Tags: [\r\n          {\r\n            id: 5202200931223649,\r\n            name: 'batman'\r\n          },\r\n          {\r\n            id: 139573284492231,\r\n            name: 'gotham'\r\n          },\r\n          {\r\n            id: 139573284492232,\r\n            name: 'gotham'\r\n          },\r\n          {\r\n            id: 139573284492233,\r\n            name: 'gotham'\r\n          },\r\n          {\r\n            id: 139573284492234,\r\n            name: 'gotham'\r\n          },\r\n          {\r\n            id: 139573284492235,\r\n            name: 'gotham'\r\n          }\r\n        ],\r\n        Alias: {\r\n          name: 'blog name',\r\n          avatar: {\r\n            src:\r\n              'https://cdn2.iconfinder.com/data/icons/super-hero/154/batman-comics-hero-avatar-head-mask-512.png'\r\n          }\r\n        },\r\n        dateCreated: '01-24-2019, 07:21',\r\n        dateUpdated: '01-26-2019, 12:21',\r\n        content:\r\n          \"Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum\",\r\n        image: {\r\n          src:\r\n            'https://i.pinimg.com/originals/2b/52/7d/2b527dfbe670cd5a746425eb30e2740d.jpg',\r\n          name: 'gotham city'\r\n        }\r\n      },\r\n      blogModalTypes,\r\n      modalType: blogModalTypes.createPrivacyGroup,\r\n      modalSettings: {\r\n        [blogModalTypes.createPrivacyGroup]: {\r\n          show: false,\r\n          title: 'Create new privacy group',\r\n          dismissText: 'Cancel',\r\n          actionText: 'Save'\r\n        }\r\n      }\r\n    };\r\n  },\r\n  computed: {\r\n    blogComponents() {\r\n      return getComponentsByPrefix.call(this, blogRoot);\r\n    }\r\n  },\r\n  methods: {\r\n    handleModalOpen(modalType) {\r\n      this.modalType = modalType;\r\n      this.modalSettings[modalType].show = true;\r\n    },\r\n    onPageChange(page) {\r\n      this.currentPage = page;\r\n      this.getData();\r\n    },\r\n    setComponent(tabIndex = 0, componentIndex = 0) {\r\n      this.handleSetActiveTab(tabIndex);\r\n      this.currentComponent = this.blogComponents[componentIndex];\r\n    },\r\n    async getData() {\r\n      try {\r\n        this.data = await getBlog(this.name, this.currentPage);\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    }\r\n  },\r\n  async mounted() {\r\n    await this.getData();\r\n    this.setComponent();\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.blog {\r\n  grid-area: content;\r\n  overflow: auto;\r\n  background-color: var(--BG-primary);\r\n\r\n  &-header {\r\n    display: grid;\r\n    align-items: end;\r\n    grid-template-rows: minmax(0, 60px);\r\n    grid-template-columns: var(--width-small) max-content var(--width-small);\r\n    grid-gap: var(--element-margin-xl);\r\n    background-color: var(--BG-blog-post);\r\n    padding: 0 var(--element-padding-xl);\r\n    margin-bottom: var(--element-margin-xl);\r\n    &__avatar {\r\n      border: var(--border-width-avatar) solid var(--color-white);\r\n    }\r\n  }\r\n  &-content {\r\n    padding: 0 var(--element-padding-xl);\r\n    display: grid;\r\n    grid-column-gap: var(--element-margin-xl);\r\n    grid-template-columns: var(--width-small) auto var(--width-small);\r\n  }\r\n}\r\n</style>\r\n"]}]}