{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\Projects\\fanexus\\src\\components\\Community\\CommunityRequests.vue?vue&type=style&index=0&id=0ec33887&lang=scss&scoped=true&","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\components\\Community\\CommunityRequests.vue","mtime":1591096035392},{"path":"I:\\Projects\\fanexus\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZm9sbG93ZXJzLXJlcXVlc3RzIHsNCiAgZGlzcGxheTogZ3JpZDsNCiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnIgMWZyIDFmcjsNCiAgZ3JpZC1nYXA6IHZhcigtLWVsZW1lbnQtbWFyZ2luLW0pOw0KfQ0K"},{"version":3,"sources":["CommunityRequests.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA","file":"CommunityRequests.vue","sourceRoot":"src/components/Community","sourcesContent":["<template>\r\n  <div v-if=\"requestsData\" class=\"followers-requests\">\r\n    <request\r\n      v-for=\"{ Alias, id, createdAt } in requestsData\"\r\n      :showButtons=\"true\"\r\n      :alias=\"Alias\"\r\n      activityName=\"subscribed to your community:\"\r\n      :activityText=\"'@' + data.link\"\r\n      :date=\"createdAt\"\r\n      :key=\"id\"\r\n      @decline=\"() => handleUserRequest(id)\"\r\n      @accept=\"() => handleUserRequest(id, true)\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport {\r\n  communityAreas,\r\n  getCommunityRequests,\r\n  declineRequest,\r\n  acceptRequest\r\n} from '@/services/community.service';\r\nimport Request from '@/components/Blog/Request';\r\n\r\nexport default {\r\n  name: communityAreas.requests,\r\n  components: {\r\n    Request\r\n  },\r\n  props: {\r\n    communityId: {\r\n      required: true,\r\n      type: Number\r\n    },\r\n    data: {\r\n      type: Object\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      requestsData: null,\r\n      currentPage: 1,\r\n      communityRequestData: {\r\n        alias: null,\r\n        requestId: null\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    async getData() {\r\n      const payload = {\r\n        alias: this.activeAliasId\r\n      };\r\n      try {\r\n        this.requestsData = await getCommunityRequests(\r\n          this.communityId,\r\n          this.currentPage,\r\n          payload\r\n        );\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    },\r\n    async handleUserRequest(memberId, isAccept) {\r\n      this.communityRequestData.requestId = memberId;\r\n      this.communityRequestData.alias = this.activeAliasId;\r\n      const payload = [this.communityId, this.communityRequestData];\r\n      if (isAccept) {\r\n        try {\r\n          await acceptRequest(...payload);\r\n          await this.getData();\r\n        } catch (e) {\r\n          return false;\r\n        } finally {\r\n          this.communityRequestData.requestId = null;\r\n          this.communityRequestData.alias = null;\r\n        }\r\n      } else {\r\n        try {\r\n          await declineRequest(...payload);\r\n          await this.getData();\r\n        } catch (e) {\r\n          return false;\r\n        } finally {\r\n          this.communityRequestData.requestId = null;\r\n          this.communityRequestData.alias = null;\r\n        }\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      activeAliasId: state => state.alias.activeAliasId\r\n    })\r\n  },\r\n  async mounted() {\r\n    await this.getData();\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.followers-requests {\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: var(--element-margin-m);\r\n}\r\n</style>\r\n"]}]}