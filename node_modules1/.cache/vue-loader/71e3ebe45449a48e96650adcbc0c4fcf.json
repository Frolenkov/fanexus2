{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Projects\\fanexus\\src\\views\\Followers.vue?vue&type=style&index=0&id=7568ce6a&lang=scss&scoped=true&","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\views\\Followers.vue","mtime":1595221465092},{"path":"F:\\Projects\\fanexus\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmZvbGxvd2VycyB7DQogIG92ZXJmbG93LXk6IGF1dG87DQogIGdyaWQtYXJlYTogY29udGVudDsNCn0NCg=="},{"version":3,"sources":["Followers.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;AACA","file":"Followers.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"followers\">\r\n    <account-actions-header\r\n      :selectPrimaryOptions=\"selectPrimaryOptions\"\r\n      :selectSecondaryOptions=\"selectSecondaryOptions\"\r\n      :showSearch=\"!activeTab\"\r\n      :navTabs=\"navTabs\"\r\n      :showButtons=\"!!activeTab\"\r\n      :activeTab=\"activeTab\"\r\n      @selectTab=\"$active => setComponent($active, $active)\"\r\n    />\r\n    <component :is=\"currentComponent\" :data=\"data\" />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport getComponentsByPrefix from '@/utils/getComponentsByPrefix';\r\nimport {\r\n  followersAreas,\r\n  followersRoot,\r\n  getFollowedBy\r\n} from '@/services/followers.service';\r\nimport { followableTypes } from '@/services/following.service';\r\nimport tabsMixin from '@/mixins/tabs.mixin';\r\nimport AccountActionsHeader from '~common/AccountActionsHeader';\r\nimport FollowersFollowers from '@/components/Activities/FollowersFollowers';\r\nimport FollowersRequests from '@/components/Activities/FollowersRequests';\r\n\r\nexport default {\r\n  components: {\r\n    AccountActionsHeader,\r\n    FollowersFollowers,\r\n    FollowersRequests\r\n  },\r\n  mixins: [tabsMixin],\r\n  data() {\r\n    return {\r\n      data: { followedBy: [] },\r\n      currentPage: 1,\r\n      currentComponent: followersAreas.FollowersFollowers,\r\n      activeTab: 0,\r\n      selectSecondaryOptions: [],\r\n      navTabs: [\r\n        {\r\n          title: 'Followers',\r\n          component: followersAreas.FollowersFollowers\r\n        },\r\n        {\r\n          // @TODO make data dynamic\r\n          title: 'Requests',\r\n          number: '32',\r\n          component: followersAreas.FollowersRequests\r\n        }\r\n      ],\r\n      // @TODO make data dynamic\r\n      selectPrimaryOptions: [\r\n        { id: 15, text: 'security group name' },\r\n        { id: 14, text: 'security group name' },\r\n        { id: 13, text: 'security group name' },\r\n        { id: 12, text: 'security group name' },\r\n        { id: 11, text: 'security group name' }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    followersComponents() {\r\n      return getComponentsByPrefix.call(this, followersRoot);\r\n    },\r\n    ...mapState({\r\n      activeAliasBlogId: state => state.alias.activeAliasBlog.id\r\n    })\r\n  },\r\n  methods: {\r\n    setComponent(tabIndex = 0, componentIndex = 0) {\r\n      this.handleSetActiveTab(tabIndex);\r\n      this.currentComponent = this.followersComponents[componentIndex];\r\n    },\r\n    async getData() {\r\n      this.data = await getFollowedBy(\r\n        this.activeAliasBlogId,\r\n        followableTypes.blog\r\n      );\r\n    }\r\n  },\r\n  watch: {\r\n    activeAliasBlogId: {\r\n      handler(val) {\r\n        if (val) {\r\n          this.getData();\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.followers {\r\n  overflow-y: auto;\r\n  grid-area: content;\r\n}\r\n</style>\r\n"]}]}