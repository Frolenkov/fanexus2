{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Projects\\fanexus\\src\\views\\Following.vue?vue&type=style&index=0&id=dd2fed72&lang=scss&scoped=true&","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\views\\Following.vue","mtime":1598358809821},{"path":"F:\\Projects\\fanexus\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKDQouZm9sbG93aW5nIHsNCiAgZ3JpZC1hcmVhOiBjb250ZW50Ow0KICBvdmVyZmxvdy15OiBhdXRvOw0KfQ0K"},{"version":3,"sources":["Following.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA","file":"Following.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div class=\"following\">\r\n    <component\r\n      :is=\"currentComponent\"\r\n      :data=\"data\"\r\n      button-type=\"follow\"\r\n      @remove-tag=\"unfollowTag\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\nimport getComponentsByPrefix from '@/utils/getComponentsByPrefix';\r\nimport {\r\n  followingAreas,\r\n  followingRoot,\r\n  getFollowing\r\n} from '@/services/following.service';\r\nimport { deleteFollow } from '@/services/follow.service';\r\nimport { getTag } from '@/services/tag.service';\r\nimport tabsMixin from '@/mixins/tabs.mixin';\r\nimport AccountActionsHeader from '~common/AccountActionsHeader';\r\nimport FollowingFollowing from '@/components/Following/FollowingFollowing';\r\n\r\nexport default {\r\n  components: {\r\n    AccountActionsHeader,\r\n    FollowingFollowing\r\n  },\r\n  mixins: [tabsMixin],\r\n  data() {\r\n    return {\r\n      data: { followTag: [], followBlog: [], followCommunity: [] },\r\n      currentPage: 1,\r\n      currentComponent: followingAreas.FollowingFollowing,\r\n      activeTab: 0,\r\n      selectSecondaryOptions: [],\r\n      navTabs: [\r\n        {\r\n          title: 'Following',\r\n          component: followingAreas.FollowingFollowing\r\n        }\r\n      ],\r\n      /** @TODO make data dynamic */\r\n      selectPrimaryOptions: [\r\n        { id: 15, text: 'Community name' },\r\n        { id: 14, text: 'Community name' },\r\n        { id: 13, text: 'Community name' },\r\n        { id: 12, text: 'Community name' },\r\n        { id: 11, text: 'Community name' }\r\n      ]\r\n    };\r\n  },\r\n  computed: {\r\n    followingComponents() {\r\n      return getComponentsByPrefix.call(this, followingRoot);\r\n    },\r\n    ...mapState({\r\n      activeAliasBlogId: state => state.alias.activeAliasBlog.id,\r\n      activeAliasId: state => state.alias.activeAliasId\r\n    })\r\n  },\r\n  methods: {\r\n    setComponent(tabIndex = 0, componentIndex = 0) {\r\n      this.handleSetActiveTab(tabIndex);\r\n      this.currentComponent = this.followingComponents[componentIndex];\r\n    },\r\n    async getData() {\r\n      this.data = await getFollowing(this.activeAliasId);\r\n    },\r\n    async unfollowTag(tagName) {\r\n      const tagId = (await getTag(tagName)).find(tag => tag.name === tagName)\r\n        .id;\r\n      await deleteFollow(tagId, 'tag');\r\n      await this.getData();\r\n      await this.getActiveAliasStats({\r\n        alias: this.activeAliasId,\r\n        blog: this.activeAliasBlogId\r\n      });\r\n    },\r\n    ...mapActions(['getActiveAliasStats'])\r\n  },\r\n  watch: {\r\n    activeAliasId: {\r\n      handler(val) {\r\n        if (val) {\r\n          this.getData();\r\n        }\r\n      },\r\n      immediate: true\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.following {\r\n  grid-area: content;\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n"]}]}