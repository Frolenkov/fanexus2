{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\Projects\\fanexus\\src\\components\\Community\\CommunityModerators.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\components\\Community\\CommunityModerators.vue","mtime":1593690156877},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSB9IGZyb20gJ3Z1ZXgnOw0KaW1wb3J0IHsNCiAgY29tbXVuaXR5QXJlYXMsDQogIGdldE1vZGVyYXRvcnMsDQogIHJlbW92ZU1vZGVyYXRvcnMNCn0gZnJvbSAnQC9zZXJ2aWNlcy9Db21tdW5pdHkvY29tbXVuaXR5LnNlcnZpY2UnOw0KaW1wb3J0IEdyb3VwQ29tcG9uZW50IGZyb20gJ0AvY29tcG9uZW50cy9CbG9nL0dyb3VwQ29tcG9uZW50JzsNCmltcG9ydCBUYWJDb250ZW50R3JpZCBmcm9tICcuLi9jb21tb24vVGFiQ29udGVudEdyaWQnOw0KaW1wb3J0IENvbmZpcm1hdGlvbk1vZGFsIGZyb20gJy4uL2NvbW1vbi9Db25maXJtYXRpb25Nb2RhbCc7DQppbXBvcnQgeyBkZWxldGVJdGVtQnlJZCB9IGZyb20gJ0AvdXRpbHMvYXJyYXknOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIG5hbWU6IGNvbW11bml0eUFyZWFzLm1vZGVyYXRvcnMsDQogIGNvbXBvbmVudHM6IHsNCiAgICBHcm91cENvbXBvbmVudCwNCiAgICBUYWJDb250ZW50R3JpZCwNCiAgICBDb25maXJtYXRpb25Nb2RhbA0KICB9LA0KICBwcm9wczogew0KICAgIGNvbW11bml0eUlkOiB7DQogICAgICB0eXBlOiBbTnVtYmVyLCBTdHJpbmddLA0KICAgICAgcmVxdWlyZWQ6IHRydWUNCiAgICB9DQogIH0sDQogIGRhdGEoKSB7DQogICAgcmV0dXJuIHsNCiAgICAgIGRhdGE6IG51bGwsDQogICAgICBncm91cHM6IFtdLA0KICAgICAgYWN0aXZlSXRlbTogbnVsbCwNCiAgICAgIHNldHRpbmdzOiB7DQogICAgICAgIHNob3c6IGZhbHNlLA0KICAgICAgICB0aXRsZTogJ0RlbGV0ZSBtb2RlcmF0b3InLA0KICAgICAgICAvKiogQFRPRE8gbWFrZSAnQ2FuY2VsJyBhIGRlZmF1bHQgZGlzbWlzc1RleHQgICovDQogICAgICAgIHJlbW92ZWRJdGVtOiAndXNlcicsDQogICAgICAgIHJlbW92ZWRGcm9tOiAnbW9kZXJhdG9ycycsDQogICAgICAgIGRpc21pc3NUZXh0OiAnQ2FuY2VsJywNCiAgICAgICAgYWN0aW9uVGV4dDogJ0RlbGV0ZScsDQogICAgICAgIGRhdGE6IFtdDQogICAgICB9DQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIGhhbmRsZU1vZGFsT3Blbihtb2RhbFR5cGUpIHsNCiAgICAgIHRoaXMuJGVtaXQoJ29wZW5Nb2RhbCcsIHsgdHlwZTogbW9kYWxUeXBlIH0pOw0KICAgIH0sDQogICAgc2hvd01vZGFsKGlkKSB7DQogICAgICB0aGlzLmFjdGl2ZUl0ZW0gPSBpZDsNCiAgICAgIHRoaXMuc2V0dGluZ3Muc2hvdyA9IHRydWU7DQogICAgfSwNCiAgICByZW1vdmVJdGVtRnJvbUFycmF5KCkgew0KICAgICAgZGVsZXRlSXRlbUJ5SWQodGhpcy5hY3RpdmVJdGVtLCB0aGlzLmdyb3VwcywgKCkgPT4gew0KICAgICAgICB0aGlzLmFjdGl2ZUl0ZW0gPSBudWxsOw0KICAgICAgfSk7DQogICAgfSwNCiAgICBhc3luYyBkZWxldGVNb2RlcmF0b3IoKSB7DQogICAgICBjb25zdCBwYXlsb2FkID0gew0KICAgICAgICBhbGlhczogdGhpcy5hY3RpdmVBbGlhc0lkLA0KICAgICAgICBtb2RlcmF0b3JzOiBbdGhpcy5hY3RpdmVJdGVtXQ0KICAgICAgfTsNCiAgICAgIHRyeSB7DQogICAgICAgIGF3YWl0IHJlbW92ZU1vZGVyYXRvcnModGhpcy5jb21tdW5pdHlJZCwgcGF5bG9hZCk7DQogICAgICAgIHRoaXMucmVtb3ZlSXRlbUZyb21BcnJheSgpOw0KICAgICAgfSBjYXRjaCAoZSkgew0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgICB9DQogICAgfSwNCiAgICBhc3luYyBnZXREYXRhKCkgew0KICAgICAgdGhpcy5ncm91cHMgPSBhd2FpdCBnZXRNb2RlcmF0b3JzKHRoaXMuY29tbXVuaXR5SWQsIDEpOw0KICAgIH0NCiAgfSwNCiAgY29tcHV0ZWQ6IHsNCiAgICAuLi5tYXBTdGF0ZSh7DQogICAgICBhY3RpdmVBbGlhc0lkOiBzdGF0ZSA9PiBzdGF0ZS5hbGlhcy5hY3RpdmVBbGlhc0lkDQogICAgfSkNCiAgfSwNCiAgYXN5bmMgbW91bnRlZCgpIHsNCiAgICBhd2FpdCB0aGlzLmdldERhdGEoKTsNCiAgfQ0KfTsNCg=="},{"version":3,"sources":["CommunityModerators.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAsBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CommunityModerators.vue","sourceRoot":"src/components/Community","sourcesContent":["<template>\r\n  <section class=\"moderators\">\r\n    <tab-content-grid :showSearch=\"true\" title=\"Moderators\">\r\n      <group-component\r\n        v-for=\"({ id, name, avatar, updatedAt }, index) in groups\"\r\n        :key=\"`${id}-${index}`\"\r\n        @delete=\"showModal(id)\"\r\n        activityName=\"Updated at\"\r\n        :date=\"updatedAt\"\r\n        :name=\"name\"\r\n        :image=\"avatar ? avatar.src : ''\"\r\n      />\r\n      <confirmation-modal\r\n        @submit=\"deleteModerator\"\r\n        v-if=\"settings.show\"\r\n        :settings=\"settings\"\r\n      />\r\n    </tab-content-grid>\r\n  </section>\r\n</template>\r\n\r\n<script>\r\nimport { mapState } from 'vuex';\r\nimport {\r\n  communityAreas,\r\n  getModerators,\r\n  removeModerators\r\n} from '@/services/Community/community.service';\r\nimport GroupComponent from '@/components/Blog/GroupComponent';\r\nimport TabContentGrid from '../common/TabContentGrid';\r\nimport ConfirmationModal from '../common/ConfirmationModal';\r\nimport { deleteItemById } from '@/utils/array';\r\n\r\nexport default {\r\n  name: communityAreas.moderators,\r\n  components: {\r\n    GroupComponent,\r\n    TabContentGrid,\r\n    ConfirmationModal\r\n  },\r\n  props: {\r\n    communityId: {\r\n      type: [Number, String],\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      data: null,\r\n      groups: [],\r\n      activeItem: null,\r\n      settings: {\r\n        show: false,\r\n        title: 'Delete moderator',\r\n        /** @TODO make 'Cancel' a default dismissText  */\r\n        removedItem: 'user',\r\n        removedFrom: 'moderators',\r\n        dismissText: 'Cancel',\r\n        actionText: 'Delete',\r\n        data: []\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    handleModalOpen(modalType) {\r\n      this.$emit('openModal', { type: modalType });\r\n    },\r\n    showModal(id) {\r\n      this.activeItem = id;\r\n      this.settings.show = true;\r\n    },\r\n    removeItemFromArray() {\r\n      deleteItemById(this.activeItem, this.groups, () => {\r\n        this.activeItem = null;\r\n      });\r\n    },\r\n    async deleteModerator() {\r\n      const payload = {\r\n        alias: this.activeAliasId,\r\n        moderators: [this.activeItem]\r\n      };\r\n      try {\r\n        await removeModerators(this.communityId, payload);\r\n        this.removeItemFromArray();\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    },\r\n    async getData() {\r\n      this.groups = await getModerators(this.communityId, 1);\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      activeAliasId: state => state.alias.activeAliasId\r\n    })\r\n  },\r\n  async mounted() {\r\n    await this.getData();\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n::v-deep .group-title {\r\n  &__text {\r\n    font-size: var(--size-button);\r\n  }\r\n}\r\n</style>\r\n"]}]}