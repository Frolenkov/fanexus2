{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Projects\\fanexus\\src\\components\\Activities\\CreateBlogPostModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\components\\Activities\\CreateBlogPostModal.vue","mtime":1597988880764},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["CreateBlogPostModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CreateBlogPostModal.vue","sourceRoot":"src/components/Activities","sourcesContent":["<template>\r\n  <div class=\"create-post-modal-wrapper\">\r\n    <modal\r\n      class=\"create-post-modal modal-overlay--centered\"\r\n      :tags=\"tagItems\"\r\n      :settings=\"settings\"\r\n      @save=\"handleSave\"\r\n    >\r\n      <template slot=\"body\">\r\n        <h3 class=\"title-wrapper\">Tags</h3>\r\n        <tag-input\r\n          class=\"post-tags-input\"\r\n          :list=\"editorTags\"\r\n          @listChange=\"updateList\"\r\n          placeholder=\"Add tag\"\r\n        />\r\n        <form-rich-text-editor v-model=\"editorValue\" />\r\n        <h3 class=\"title-wrapper\">\r\n          Publish post\r\n        </h3>\r\n        <div v-if=\"eligibleShareToEntities\" class=\"selects-wrapper\">\r\n          <form-select\r\n            title=\"Publish to\"\r\n            :options=\"publishToOptions\"\r\n            v-model=\"publishTo\"\r\n            name=\"publish-direction\"\r\n            optionsType=\"radiobuttons\"\r\n            class=\"wide\"\r\n          />\r\n        </div>\r\n        <h3 class=\"title-wrapper\">\r\n          Share post\r\n        </h3>\r\n        <div v-if=\"eligibleShareToEntities\" class=\"selects-wrapper\">\r\n          <form-select\r\n            title=\"Blog name\"\r\n            :options=\"shareToBlogOptions\"\r\n            v-model=\"shareTo.blogs\"\r\n            name=\"share-to-blogs\"\r\n          />\r\n          <form-select\r\n            title=\"Community name\"\r\n            :options=\"shareToCommunityOptions\"\r\n            v-model=\"shareTo.communities\"\r\n            name=\"share-to-communities\"\r\n          />\r\n        </div>\r\n        <h3 class=\"title-wrapper\">Visibility privacy groups</h3>\r\n        <privacy-group-selection v-model=\"selectedPrivacyGroups.visibility\" />\r\n        <h3 class=\"title-wrapper\">Commenting privacy groups</h3>\r\n        <privacy-group-selection v-model=\"selectedPrivacyGroups.commenting\" />\r\n        <blog-post\r\n          v-if=\"sharingBlogPost\"\r\n          class=\"section-blog-post\"\r\n          :data=\"sharedBlogPostData\"\r\n          :usedInModal=\"true\"\r\n          :show-comments=\"false\"\r\n          :show-action-buttons=\"false\"\r\n        />\r\n      </template>\r\n    </modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\n/** @TODO add to a corresponding mixin */\r\nimport { feedTypes } from '@/services/feed.service';\r\nimport Modal from '../common/Modal';\r\nimport TagInput from '../common/Fields/TagInput';\r\nimport FormRichTextEditor from '../common/Fields/FormRichTextEditor';\r\nimport FormSelect from '../common/Fields/FormSelect';\r\nimport {\r\n  createBlogPost,\r\n  editBlogPost,\r\n  getEligibleShareToEntitiesForAlias\r\n} from '@/services/Blog/blog.service';\r\nimport BlogPost from '../Blog/BlogPost';\r\nimport PrivacyGroupSelection from '@/components/PrivacyGroup/PrivacyGroupSelection.vue';\r\n\r\nexport default {\r\n  components: {\r\n    Modal,\r\n    TagInput,\r\n    FormRichTextEditor,\r\n    FormSelect,\r\n    BlogPost,\r\n    PrivacyGroupSelection\r\n  },\r\n  props: {\r\n    settings: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n  data() {\r\n    return {\r\n      alias: null,\r\n      eligibleShareToEntities: null,\r\n      publishTo: null,\r\n      shareTo: {\r\n        blogs: [],\r\n        communities: []\r\n      },\r\n      selectedPrivacyGroups: {\r\n        visibility: [],\r\n        commenting: []\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['getFeedData', 'setBlogPostContent', 'setBlogPostTags']),\r\n    /** @TODO fix form-rich text editor issue, when we click first time */\r\n    handleSave() {\r\n      if (this.sharingBlogPost) {\r\n        this.shareBlogpost();\r\n      } else if (this.blogPostId) {\r\n        this.updateBlogPost();\r\n      } else {\r\n        this.createBlogPost();\r\n      }\r\n    },\r\n    async createBlogPost(reblogOfBlogPost = null) {\r\n      const payload = {\r\n        alias: this.activeAliasId,\r\n        content: this.currentEditorValue,\r\n        shareTo: {\r\n          blogs: this.shareTo.blogs.map(({ id }) => id),\r\n          communities: this.shareTo.communities.map(({ id }) => id)\r\n        },\r\n        [this.publishTo.feedType]: this.publishTo.id,\r\n        tagNames: this.blogPostTags,\r\n        reblogOfBlogPost,\r\n        viewingPrivacyGroups: this.selectedPrivacyGroups.visibility.map(\r\n          privacyGroup => privacyGroup.id\r\n        ),\r\n        commentingPrivacyGroups: this.selectedPrivacyGroups.visibility.map(\r\n          privacyGroup => privacyGroup.id\r\n        )\r\n      };\r\n      await createBlogPost(payload);\r\n\r\n      const {\r\n        meta: { page },\r\n        params: { id, name: paramsName }\r\n      } = this.$route;\r\n      const getFeedPayload =\r\n        page === feedTypes.community ? { id } : { name: paramsName };\r\n      /** @TODO revise */\r\n      this.getFeedData({ ...getFeedPayload, pagination: 1, type: page });\r\n    },\r\n    async updateBlogPost() {\r\n      const payload = {\r\n        alias: this.activeAliasId,\r\n        content: this.editorValue,\r\n        tagNames: this.editorTags\r\n      };\r\n      await editBlogPost(this.blogPostId, payload);\r\n\r\n      const {\r\n        meta: { page },\r\n        params: { id, name: paramsName }\r\n      } = this.$route;\r\n      const createFeedPayload =\r\n        page === feedTypes.community ? { id } : { name: paramsName };\r\n      this.getFeedData({ ...createFeedPayload, pagination: 1, type: page });\r\n    },\r\n    async shareBlogpost() {\r\n      const { reblogOfBlogPostId } = this.sharedBlogPostData;\r\n      const postIdToShare = this.sharedBlogPostData.content.trim().length\r\n        ? this.blogPostId\r\n        : reblogOfBlogPostId || this.blogPostId;\r\n\r\n      await this.createBlogPost(postIdToShare);\r\n    },\r\n    updateList(list) {\r\n      this.editorTags = list;\r\n    },\r\n    async getEligibleShareToEntities() {\r\n      this.eligibleShareToEntities = await getEligibleShareToEntitiesForAlias({\r\n        alias: this.activeAliasId\r\n      });\r\n    },\r\n    setDefaultPublishTo() {\r\n      this.publishTo = {\r\n        feedType: this.sharingBlogPost ? feedTypes.blog : this.feedType,\r\n        id: this.feedData.id\r\n      };\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      activeAliasBlogId: state => state.alias.activeAliasBlog.id,\r\n      activeAliasId: state => state.alias.activeAliasId,\r\n      currentEditorValue: state => state.blogPost.data.content,\r\n      blogPostTags: state => state.blogPost.data.Tags.map(tag => tag.name),\r\n      blogPostId: state =>\r\n        !state.blogPost.sharingBlogPost\r\n          ? state.blogPost.data.id\r\n          : state.blogPost.shareData.id,\r\n      sharingBlogPost: state => state.blogPost.sharingBlogPost,\r\n      feedData: state => state.feed.data,\r\n      feedType: state => state.feed.type,\r\n      sharedBlogPostData: state =>\r\n        !state.blogPost.sharingBlogPost\r\n          ? state.blogPost.data\r\n          : state.blogPost.shareData\r\n    }),\r\n    tagItems() {\r\n      return this.editorTags.map(tag => ({\r\n        name: tag,\r\n        id: 0\r\n      }));\r\n    },\r\n    editorValue: {\r\n      get() {\r\n        return this.currentEditorValue;\r\n      },\r\n      set(value) {\r\n        this.setBlogPostContent(value);\r\n      }\r\n    },\r\n    editorTags: {\r\n      get() {\r\n        return this.blogPostTags;\r\n      },\r\n      set(value) {\r\n        this.setBlogPostTags(value);\r\n      }\r\n    },\r\n    shareToBlogOptions() {\r\n      return this.eligibleShareToEntities.eligibleBlogs.map(({ id, name }) => ({\r\n        label: name,\r\n        value: { id, feedType: feedTypes.blog }\r\n      }));\r\n    },\r\n    shareToCommunityOptions() {\r\n      return this.eligibleShareToEntities.eligibleCommunities.map(\r\n        ({ id, name }) => ({\r\n          label: name,\r\n          value: { id, feedType: feedTypes.community }\r\n        })\r\n      );\r\n    },\r\n    publishToOptions() {\r\n      return this.shareToBlogOptions\r\n        .map(({ label, value }) => ({ label: `Blog: ${label}`, value }))\r\n        .concat(\r\n          this.shareToCommunityOptions.map(({ label, value }) => ({\r\n            label: `Community: ${label}`,\r\n            value\r\n          }))\r\n        );\r\n    }\r\n  },\r\n  mounted() {\r\n    this.getEligibleShareToEntities();\r\n    this.setDefaultPublishTo();\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.create-post-modal {\r\n  &.modal-overlay--centered {\r\n    .selects-wrapper {\r\n      display: flex;\r\n    }\r\n\r\n    .title-wrapper {\r\n      font-size: var(--size-regular);\r\n      font-family: 'OpenSans-Bold', sans-serif;\r\n      margin-bottom: var(--element-margin-m);\r\n      color: var(--text-primary);\r\n    }\r\n\r\n    .post-tags-input {\r\n      margin-bottom: var(--element-margin-s);\r\n    }\r\n  }\r\n}\r\n\r\n.wide {\r\n  min-width: 250px;\r\n}\r\n\r\n::v-deep {\r\n  .rich-text-editor .textarea {\r\n    min-height: 214px;\r\n  }\r\n  .select-options-container {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .modal {\r\n    margin: 0 auto;\r\n    width: var(--width-medium);\r\n    overflow: visible;\r\n\r\n    &-content {\r\n      margin: 0;\r\n    }\r\n  }\r\n  .modal-header,\r\n  .modal-footer {\r\n    background-color: var(--BG-create-post-modal);\r\n  }\r\n  .modal-body {\r\n    background-color: var(--BG-create-post-modal-body);\r\n  }\r\n  .select {\r\n    width: 170px;\r\n    min-width: 170px;\r\n    margin: 0 var(--element-margin-s) var(--element-margin-l) 0;\r\n    &.wide {\r\n      width: 300px;\r\n      min-width: 300px;\r\n    }\r\n\r\n    button,\r\n    ul {\r\n      border-color: var(--tab-normal);\r\n    }\r\n    button {\r\n      padding: var(--button-padding-s) var(--element-padding-s);\r\n    }\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  .form-input input {\r\n    padding: var(--element-padding-xs) var(--element-padding-xs)\r\n      var(--element-padding-xs) var(--element-padding-xl);\r\n  }\r\n  .tags-list {\r\n    padding: 0 0 var(--element-padding-l) 0;\r\n    &__item {\r\n      padding: var(--element-padding-s);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}