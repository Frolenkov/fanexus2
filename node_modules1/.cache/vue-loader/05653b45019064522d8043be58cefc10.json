{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\Projects\\fanexus\\src\\components\\common\\Fields\\TagInput.vue?vue&type=style&index=0&id=7203a05c&lang=scss&scoped=true&","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\components\\common\\Fields\\TagInput.vue","mtime":1590761859482},{"path":"I:\\Projects\\fanexus\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoNCi50YWdzLWlucHV0LWFyZWEgew0KICBjdXJzb3I6IHRleHQ7DQogIHdpZHRoOiAxMDAlOw0KICBwYWRkaW5nOiB2YXIoLS1lbGVtZW50LXBhZGRpbmctbSkgdmFyKC0tZWxlbWVudC1wYWRkaW5nLXMpOw0KICBvdmVyZmxvdzogYXV0bzsNCiAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7DQogIGJvcmRlcjogdmFyKC0tYm9yZGVyLXdpZHRoLXRoaW4pIHNvbGlkOw0KICBib3JkZXItY29sb3I6IHZhcigtLWJvcmRlci1pbnB1dC1ub3JtYWwpOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1CRy1ibG9nLXBvc3QpOw0KfQ0KLm5ldy10YWcgew0KICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsNCiAgYm9yZGVyOiBub25lOw0KICBjb2xvcjogdmFyKC0tdGV4dC1wcmltYXJ5KTsNCiAgZm9udC1zaXplOiB2YXIoLS1zaXplLXJlZ3VsYXIpOw0KDQogICY6OnBsYWNlaG9sZGVyIHsNCiAgICBjb2xvcjogdmFyKC0tY29sb3ItbWFpbi01MDApOw0KICB9DQp9DQo="},{"version":3,"sources":["TagInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TagInput.vue","sourceRoot":"src/components/common/Fields","sourcesContent":["<template>\r\n  <div class=\"tags-input-area\" @click=\"setToInput\">\r\n    <tags-list :list=\"listView\" :is-input=\"true\" />\r\n    <input\r\n      ref=\"input\"\r\n      type=\"text\"\r\n      class=\"new-tag\"\r\n      :placeholder=\"placeholder\"\r\n      v-model=\"newTag\"\r\n      @blur=\"addTag\"\r\n      @keydown.enter.prevent=\"addTag\"\r\n    />\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport TagsList from '~common/TagsList';\r\n\r\nexport default {\r\n  props: {\r\n    list: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  components: {\r\n    TagsList\r\n  },\r\n  data() {\r\n    return {\r\n      newTag: ''\r\n    };\r\n  },\r\n  computed: {\r\n    listView() {\r\n      return this.list.map(tag => {\r\n        return {\r\n          name: tag,\r\n          remove: () => {\r\n            this.$emit(\r\n              'listChange',\r\n              this.list.filter(value => value !== tag)\r\n            );\r\n          }\r\n        };\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    setToInput() {\r\n      this.$refs.input.focus();\r\n    },\r\n    addTag() {\r\n      if (this.newTag && !this.list.includes(this.newTag)) {\r\n        const tagList = this.list.slice();\r\n        tagList.push(this.newTag);\r\n        this.newTag = '';\r\n        this.$emit('listChange', tagList);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.tags-input-area {\r\n  cursor: text;\r\n  width: 100%;\r\n  padding: var(--element-padding-m) var(--element-padding-s);\r\n  overflow: auto;\r\n  border-radius: var(--border-radius);\r\n  border: var(--border-width-thin) solid;\r\n  border-color: var(--border-input-normal);\r\n  background-color: var(--BG-blog-post);\r\n}\r\n.new-tag {\r\n  background: transparent;\r\n  border: none;\r\n  color: var(--text-primary);\r\n  font-size: var(--size-regular);\r\n\r\n  &::placeholder {\r\n    color: var(--color-main-500);\r\n  }\r\n}\r\n</style>\r\n"]}]}