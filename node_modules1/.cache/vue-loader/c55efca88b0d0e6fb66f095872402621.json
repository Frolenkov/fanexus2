{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\Projects\\fanexus\\src\\components\\common\\Fields\\TagInput.vue?vue&type=style&index=0&id=7203a05c&lang=scss&scoped=true&","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\components\\common\\Fields\\TagInput.vue","mtime":1593690157802},{"path":"I:\\Projects\\fanexus\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\style-resources-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLnRhZ3MtaW5wdXQtYXJlYSB7DQogIGN1cnNvcjogdGV4dDsNCiAgd2lkdGg6IDEwMCU7DQogIHBhZGRpbmc6IHZhcigtLWVsZW1lbnQtcGFkZGluZy1tKSB2YXIoLS1lbGVtZW50LXBhZGRpbmctcyk7DQogIG92ZXJmbG93OiB2aXNpYmxlOw0KICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzKTsNCiAgYm9yZGVyOiB2YXIoLS1ib3JkZXItd2lkdGgtdGhpbikgc29saWQ7DQogIGJvcmRlci1jb2xvcjogdmFyKC0tYm9yZGVyLWlucHV0LW5vcm1hbCk7DQogIGJhY2tncm91bmQtY29sb3I6IHZhcigtLUJHLWJsb2ctcG9zdCk7DQoNCiAgJl9faW5wdXQgew0KICAgIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQoNCiAgICAmLWF1dG9jb21wbGV0ZSB7DQogICAgICBwb3NpdGlvbjogYWJzb2x1dGU7DQogICAgICBsZWZ0OiB2YXIoLS1lbGVtZW50LXBhZGRpbmcteHMpOw0KICAgICAgdG9wOiAxMDAlOw0KICAgICAgYm9yZGVyOiB2YXIoLS1ib3JkZXItd2lkdGgtdGhpbikgc29saWQgdmFyKC0tYm9yZGVyLXRhZyk7DQogICAgICBwYWRkaW5nOiB2YXIoLS1lbGVtZW50LXBhZGRpbmctcyk7DQogICAgICBib3JkZXItcmFkaXVzOiB2YXIoLS1ib3JkZXItcmFkaXVzKTsNCiAgICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLUJHLWRyb3Bkb3duKTsNCiAgICAgIGN1cnNvcjogcG9pbnRlcjsNCiAgICAgIHotaW5kZXg6IHZhcigtLXotaW5kZXgtMSk7DQoNCiAgICAgICYtZW50cnkgew0KICAgICAgICBjb2xvcjogdmFyKC0tdGV4dC1wcmltYXJ5KTsNCiAgICAgICAgcGFkZGluZzogdmFyKC0tZWxlbWVudC1wYWRkaW5nLXhzKTsNCiAgICAgICAgYm9yZGVyLXJhZGl1czogdmFyKC0tYm9yZGVyLXJhZGl1cyk7DQoNCiAgICAgICAgJjpob3ZlciB7DQogICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tQkctYnV0dG9uLXByaW1hcnktaG92ZXIpOw0KICAgICAgICAgIGNvbG9yOiB2YXIoLS10YWItYWN0aXZlKTsNCiAgICAgICAgfQ0KICAgICAgfQ0KICAgIH0NCiAgfQ0KfQ0KLm5ldy10YWcgew0KICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsNCiAgYm9yZGVyOiBub25lOw0KICBwYWRkaW5nOiB2YXIoLS1lbGVtZW50LXBhZGRpbmcteHMpOw0KICBjb2xvcjogdmFyKC0tdGV4dC1wcmltYXJ5KTsNCiAgZm9udC1zaXplOiB2YXIoLS1zaXplLXJlZ3VsYXIpOw0KDQogICY6OnBsYWNlaG9sZGVyIHsNCiAgICBjb2xvcjogdmFyKC0tY29sb3ItbWFpbi01MDApOw0KICB9DQp9DQo="},{"version":3,"sources":["TagInput.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"TagInput.vue","sourceRoot":"src/components/common/Fields","sourcesContent":["<template>\r\n  <div class=\"tags-input-area\" @click=\"setToInput\">\r\n    <tags-list :list=\"listView\" :is-input=\"true\" />\r\n    <div class=\"tags-input-area__input\">\r\n      <input\r\n        ref=\"input\"\r\n        type=\"text\"\r\n        class=\"new-tag\"\r\n        :placeholder=\"placeholder\"\r\n        v-model=\"newTag\"\r\n        @focus=\"startInput\"\r\n        @blur=\"endInput\"\r\n        @keydown.enter.prevent=\"addTag\"\r\n      />\r\n      <div\r\n        class=\"tags-input-area__input-autocomplete\"\r\n        v-if=\"inputtingTags && autocompleteEntries.length\"\r\n      >\r\n        <div\r\n          class=\"tags-input-area__input-autocomplete-entry\"\r\n          v-for=\"autocompleteEntry of autocompleteEntries\"\r\n          :key=\"autocompleteEntry\"\r\n          @mousedown=\"setInput(autocompleteEntry)\"\r\n        >\r\n          {{ autocompleteEntry }}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { getTag } from '@/services/tag.service';\r\nimport TagsList from '~common/TagsList';\r\n\r\nexport default {\r\n  props: {\r\n    list: {\r\n      type: Array,\r\n      default: () => [],\r\n      required: true\r\n    },\r\n    placeholder: {\r\n      type: String,\r\n      default: ''\r\n    }\r\n  },\r\n  components: {\r\n    TagsList\r\n  },\r\n  data() {\r\n    return {\r\n      newTag: '',\r\n      inputtingTags: false,\r\n      autocompleteEntries: []\r\n    };\r\n  },\r\n  computed: {\r\n    listView() {\r\n      return this.list.map(tag => {\r\n        return {\r\n          name: tag,\r\n          remove: () => {\r\n            this.$emit(\r\n              'listChange',\r\n              this.list.filter(value => value !== tag)\r\n            );\r\n          }\r\n        };\r\n      });\r\n    }\r\n  },\r\n  methods: {\r\n    setToInput() {\r\n      this.$refs.input.focus();\r\n    },\r\n    addTag() {\r\n      if (this.newTag && !this.list.includes(this.newTag)) {\r\n        const tagList = this.list.slice();\r\n        tagList.push(this.newTag);\r\n        this.newTag = '';\r\n        this.$emit('listChange', tagList);\r\n      }\r\n    },\r\n    startInput() {\r\n      this.inputtingTags = true;\r\n    },\r\n    endInput() {\r\n      this.addTag();\r\n      this.inputtingTags = false;\r\n    },\r\n    getAutocomplete(input) {\r\n      return getTag(input).then(result => [\r\n        ...new Set(\r\n          result\r\n            .filter(\r\n              tag =>\r\n                (tag.name.toLowerCase().includes(input.toLowerCase()) ||\r\n                  tag.synonyms.some(synonym =>\r\n                    synonym.toLowerCase().includes(input.toLowerCase())\r\n                  )) &&\r\n                !this.list.includes(tag.name)\r\n            )\r\n            .map(result => result.name)\r\n        )\r\n      ]);\r\n    },\r\n    setInput(input) {\r\n      this.newTag = input;\r\n    }\r\n  },\r\n  watch: {\r\n    newTag(input) {\r\n      if (input) {\r\n        return this.getAutocomplete(input).then(entries => {\r\n          this.autocompleteEntries = entries;\r\n        });\r\n      } else {\r\n        return (this.autocompleteEntries = []);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.tags-input-area {\r\n  cursor: text;\r\n  width: 100%;\r\n  padding: var(--element-padding-m) var(--element-padding-s);\r\n  overflow: visible;\r\n  border-radius: var(--border-radius);\r\n  border: var(--border-width-thin) solid;\r\n  border-color: var(--border-input-normal);\r\n  background-color: var(--BG-blog-post);\r\n\r\n  &__input {\r\n    position: relative;\r\n    display: inline-block;\r\n\r\n    &-autocomplete {\r\n      position: absolute;\r\n      left: var(--element-padding-xs);\r\n      top: 100%;\r\n      border: var(--border-width-thin) solid var(--border-tag);\r\n      padding: var(--element-padding-s);\r\n      border-radius: var(--border-radius);\r\n      background-color: var(--BG-dropdown);\r\n      cursor: pointer;\r\n      z-index: var(--z-index-1);\r\n\r\n      &-entry {\r\n        color: var(--text-primary);\r\n        padding: var(--element-padding-xs);\r\n        border-radius: var(--border-radius);\r\n\r\n        &:hover {\r\n          background-color: var(--BG-button-primary-hover);\r\n          color: var(--tab-active);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n.new-tag {\r\n  background: transparent;\r\n  border: none;\r\n  padding: var(--element-padding-xs);\r\n  color: var(--text-primary);\r\n  font-size: var(--size-regular);\r\n\r\n  &::placeholder {\r\n    color: var(--color-main-500);\r\n  }\r\n}\r\n</style>\r\n"]}]}