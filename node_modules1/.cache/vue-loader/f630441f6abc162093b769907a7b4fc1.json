{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\Projects\\fanexus\\src\\components\\Activities\\CreateBlogPostModal.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\components\\Activities\\CreateBlogPostModal.vue","mtime":1593701750416},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KDQppbXBvcnQgeyBtYXBTdGF0ZSwgbWFwQWN0aW9ucyB9IGZyb20gJ3Z1ZXgnOw0KLyoqIEBUT0RPIGFkZCB0byBhIGNvcnJlc3BvbmRpbmcgbWl4aW4gKi8NCmltcG9ydCB7IGZlZWRUeXBlcyB9IGZyb20gJ0Avc2VydmljZXMvZmVlZC5zZXJ2aWNlJzsNCmltcG9ydCBNb2RhbCBmcm9tICcuLi9jb21tb24vTW9kYWwnOw0KaW1wb3J0IFRhZ0lucHV0IGZyb20gJy4uL2NvbW1vbi9GaWVsZHMvVGFnSW5wdXQnOw0KaW1wb3J0IEZvcm1SaWNoVGV4dEVkaXRvciBmcm9tICcuLi9jb21tb24vRmllbGRzL0Zvcm1SaWNoVGV4dEVkaXRvcic7DQppbXBvcnQgRm9ybVNlbGVjdCBmcm9tICcuLi9jb21tb24vRmllbGRzL0Zvcm1TZWxlY3QnOw0KaW1wb3J0IHsgY3JlYXRlQmxvZ1Bvc3QsIGVkaXRCbG9nUG9zdCB9IGZyb20gJ0Avc2VydmljZXMvQmxvZy9ibG9nLnNlcnZpY2UnOw0KaW1wb3J0IHsgbW9kZXMgfSBmcm9tICdAL3NlcnZpY2VzL0Jsb2dQb3N0L2Jsb2dQb3N0LnNlcnZpY2UnOw0KDQpleHBvcnQgZGVmYXVsdCB7DQogIGNvbXBvbmVudHM6IHsNCiAgICBNb2RhbCwNCiAgICBUYWdJbnB1dCwNCiAgICBGb3JtUmljaFRleHRFZGl0b3IsDQogICAgRm9ybVNlbGVjdA0KICB9LA0KICBwcm9wczogew0KICAgIHNldHRpbmdzOiB7DQogICAgICB0eXBlOiBPYmplY3QsDQogICAgICByZXF1aXJlZDogdHJ1ZQ0KICAgIH0NCiAgfSwNCg0KICBkYXRhKCkgew0KICAgIHJldHVybiB7DQogICAgICBhbGlhczogbnVsbCwNCiAgICAgIG1vZGVzLA0KICAgICAgLyoqIEBUT0RPIHVzZSBkeW5hbWljIGRhdGEgaW5zdGVhZCAqLw0KICAgICAgc2VsZWN0czogew0KICAgICAgICBwdWJsaXNoU2VsZWN0czogew0KICAgICAgICAgIHRpdGxlOiAnUHVibGlzaCBwb3N0JywNCiAgICAgICAgICBjb250ZW50OiB7DQogICAgICAgICAgICBibG9nTmFtZVNlbGVjdDogew0KICAgICAgICAgICAgICB0aXRsZTogJ0Jsb2cgbmFtZScsDQogICAgICAgICAgICAgIHNlbGVjdE9wdGlvbnM6IFsNCiAgICAgICAgICAgICAgICB7IGlkOiAxMSwgdGV4dDogJ0Jsb2cgbmFtZTEnIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMTIsIHRleHQ6ICdCbG9nIG5hbWUyJyB9LA0KICAgICAgICAgICAgICAgIHsgaWQ6IDEzLCB0ZXh0OiAnQmxvZyBuYW1lMycgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAxNCwgdGV4dDogJ0Jsb2cgbmFtZTQnIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMTUsIHRleHQ6ICdCbG9nIG5hbWU1JyB9DQogICAgICAgICAgICAgIF0NCiAgICAgICAgICAgIH0sDQogICAgICAgICAgICB2aXNpYmxlU2VsZWN0OiB7DQogICAgICAgICAgICAgIHRpdGxlOiAnVmlzaWJsZSBmb3IgZXZlcnlvbmUnLA0KICAgICAgICAgICAgICBzZWxlY3RPcHRpb25zOiBbDQogICAgICAgICAgICAgICAgeyBpZDogMTYsIHRleHQ6ICdWaXNpYmxlIGZvciBldmVyeW9uZTEnIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMTcsIHRleHQ6ICdWaXNpYmxlIGZvciBldmVyeW9uZTInIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMTgsIHRleHQ6ICdWaXNpYmxlIGZvciBldmVyeW9uZTMnIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMTksIHRleHQ6ICdWaXNpYmxlIGZvciBldmVyeW9uZTQnIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMjAsIHRleHQ6ICdWaXNpYmxlIGZvciBldmVyeW9uZTUnIH0NCiAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGRpc2FibGVDb21tZW50c1NlbGVjdDogew0KICAgICAgICAgICAgICB0aXRsZTogJ0Rpc2FibGUgY29tbWVudHMnLA0KICAgICAgICAgICAgICBzZWxlY3RPcHRpb25zOiBbDQogICAgICAgICAgICAgICAgeyBpZDogMjEsIHRleHQ6ICdEaXNhYmxlIGNvbW1lbnQxJyB9LA0KICAgICAgICAgICAgICAgIHsgaWQ6IDIyLCB0ZXh0OiAnRGlzYWJsZSBjb21tZW50MicgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAyMywgdGV4dDogJ0Rpc2FibGUgY29tbWVudDMnIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMjQsIHRleHQ6ICdEaXNhYmxlIGNvbW1lbnQ0JyB9LA0KICAgICAgICAgICAgICAgIHsgaWQ6IDI1LCB0ZXh0OiAnRGlzYWJsZSBjb21tZW50NScgfQ0KICAgICAgICAgICAgICBdDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9LA0KICAgICAgICBzaGFyZVNlbGVjdHM6IHsNCiAgICAgICAgICB0aXRsZTogJ1NoYXJlIHBvc3QnLA0KICAgICAgICAgIGNvbnRlbnQ6IHsNCiAgICAgICAgICAgIGJsb2dOYW1lU2VsZWN0OiB7DQogICAgICAgICAgICAgIHRpdGxlOiAnQmxvZyBuYW1lJywNCiAgICAgICAgICAgICAgc2VsZWN0T3B0aW9uczogWw0KICAgICAgICAgICAgICAgIHsgaWQ6IDExLCB0ZXh0OiAnQmxvZyBuYW1lMScgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAxMiwgdGV4dDogJ0Jsb2cgbmFtZTInIH0sDQogICAgICAgICAgICAgICAgeyBpZDogMTMsIHRleHQ6ICdCbG9nIG5hbWUzJyB9LA0KICAgICAgICAgICAgICAgIHsgaWQ6IDE0LCB0ZXh0OiAnQmxvZyBuYW1lNCcgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAxNSwgdGV4dDogJ0Jsb2cgbmFtZTUnIH0NCiAgICAgICAgICAgICAgXQ0KICAgICAgICAgICAgfSwNCiAgICAgICAgICAgIGNvbW11bml0eU5hbWVTZWxlY3Q6IHsNCiAgICAgICAgICAgICAgdGl0bGU6ICdDb21tdW5pdHkgbmFtZScsDQogICAgICAgICAgICAgIHNlbGVjdE9wdGlvbnM6IFsNCiAgICAgICAgICAgICAgICB7IGlkOiAxNiwgdGV4dDogJ1Zpc2libGUgZm9yIGV2ZXJ5b25lMScgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAxNywgdGV4dDogJ1Zpc2libGUgZm9yIGV2ZXJ5b25lMicgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAxOCwgdGV4dDogJ1Zpc2libGUgZm9yIGV2ZXJ5b25lMycgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAxOSwgdGV4dDogJ1Zpc2libGUgZm9yIGV2ZXJ5b25lNCcgfSwNCiAgICAgICAgICAgICAgICB7IGlkOiAyMCwgdGV4dDogJ1Zpc2libGUgZm9yIGV2ZXJ5b25lNScgfQ0KICAgICAgICAgICAgICBdDQogICAgICAgICAgICB9DQogICAgICAgICAgfQ0KICAgICAgICB9DQogICAgICB9DQogICAgfTsNCiAgfSwNCiAgbWV0aG9kczogew0KICAgIC4uLm1hcEFjdGlvbnMoWydnZXRGZWVkRGF0YScsICdzZXRCbG9nUG9zdENvbnRlbnQnLCAnc2V0QmxvZ1Bvc3RUYWdzJ10pLA0KICAgIC8qKiBAVE9ETyBmaXggZm9ybS1yaWNoIHRleHQgZWRpdG9yIGlzc3VlLCB3aGVuIHdlIGNsaWNrIGZpcnN0IHRpbWUgKi8NCiAgICBhc3luYyBjcmVhdGVCbG9nUG9zdCgpIHsNCiAgICAgIGNvbnN0IHsNCiAgICAgICAgbWV0YTogeyBwYWdlIH0sDQogICAgICAgIHBhcmFtczogeyBpZCwgbmFtZTogcGFyYW1zTmFtZSB9DQogICAgICB9ID0gdGhpcy4kcm91dGU7DQogICAgICBsZXQgcGF5bG9hZCA9IHsNCiAgICAgICAgYWxpYXM6IHRoaXMuYWN0aXZlQWxpYXNJZCwNCiAgICAgICAgY29udGVudDogdGhpcy5lZGl0b3JWYWx1ZSwNCiAgICAgICAgW3BhZ2VdOiBpZCA/ICtpZCA6ICtwYXJhbXNOYW1lLA0KICAgICAgICB0YWdOYW1lczogdGhpcy5lZGl0b3JUYWdzDQogICAgICAgIC8vIEBUT0RPIGFkZCB0YWdzICsgc2V0dGluZ3MgZWRpdCBmdW5jIGh0dHBzOi8vdGVtcGVyYW5jZS1zb2Z0d2FyZS5hdGxhc3NpYW4ubmV0L2Jyb3dzZS9GQU4tMTg0DQogICAgICAgIC8vIHRhZ3M6IFsxLCAyLCAzXSwNCiAgICAgICAgLy8gY29udGVudEFjY2Vzc0NvbnRyb2w6IHsNCiAgICAgICAgLy8gICBhY2Nlc3NDb250cm9sU2V0dGluZzogJ3NwZWNpZmljSW5jbHVkZScsDQogICAgICAgIC8vICAgYWxpYXNlczogWzFdDQogICAgICAgIC8vIH0NCiAgICAgIH07DQogICAgICBhd2FpdCBjcmVhdGVCbG9nUG9zdChwYXlsb2FkKTsNCiAgICAgIHBheWxvYWQgPSBudWxsOw0KICAgICAgbGV0IGNyZWF0ZUZlZWRQYXlsb2FkID0geyBuYW1lOiBwYXJhbXNOYW1lIH07DQogICAgICBpZiAocGFnZSA9PT0gZmVlZFR5cGVzLmNvbW11bml0eSkgew0KICAgICAgICBjcmVhdGVGZWVkUGF5bG9hZCA9IHsgaWQgfTsNCiAgICAgIH0NCiAgICAgIC8qKiBAVE9ETyByZXZpc2UgKi8NCiAgICAgIHRoaXMuZ2V0RmVlZERhdGEoeyAuLi5jcmVhdGVGZWVkUGF5bG9hZCwgcGFnaW5hdGlvbjogMSwgdHlwZTogcGFnZSB9KTsNCiAgICB9LA0KICAgIGFzeW5jIHVwZGF0ZUJsb2dQb3N0KCkgew0KICAgICAgY29uc3QgcGF5bG9hZCA9IHsNCiAgICAgICAgYWxpYXM6IHRoaXMuYWN0aXZlQWxpYXNJZCwNCiAgICAgICAgY29udGVudDogdGhpcy5lZGl0b3JWYWx1ZSwNCiAgICAgICAgdGFnTmFtZXM6IHRoaXMuZWRpdG9yVGFncw0KICAgICAgfTsNCiAgICAgIGF3YWl0IGVkaXRCbG9nUG9zdCh0aGlzLmJsb2dQb3N0SWQsIHBheWxvYWQpOw0KDQogICAgICBjb25zdCB7DQogICAgICAgIG1ldGE6IHsgcGFnZSB9LA0KICAgICAgICBwYXJhbXM6IHsgaWQsIG5hbWU6IHBhcmFtc05hbWUgfQ0KICAgICAgfSA9IHRoaXMuJHJvdXRlOw0KICAgICAgY29uc3QgY3JlYXRlRmVlZFBheWxvYWQgPQ0KICAgICAgICBwYWdlID09PSBmZWVkVHlwZXMuY29tbXVuaXR5ID8geyBpZCB9IDogeyBuYW1lOiBwYXJhbXNOYW1lIH07DQogICAgICB0aGlzLmdldEZlZWREYXRhKHsgLi4uY3JlYXRlRmVlZFBheWxvYWQsIHBhZ2luYXRpb246IDEsIHR5cGU6IHBhZ2UgfSk7DQogICAgfSwNCiAgICB1cGRhdGVMaXN0KGxpc3QpIHsNCiAgICAgIHRoaXMuZWRpdG9yVGFncyA9IGxpc3Q7DQogICAgfQ0KICB9LA0KICBjb21wdXRlZDogew0KICAgIC4uLm1hcFN0YXRlKHsNCiAgICAgIGFjdGl2ZUFsaWFzSWQ6IHN0YXRlID0+IHN0YXRlLmFsaWFzLmFjdGl2ZUFsaWFzSWQsDQogICAgICBjdXJyZW50RWRpdG9yVmFsdWU6IHN0YXRlID0+IHN0YXRlLmJsb2dQb3N0LmRhdGEuY29udGVudCwNCiAgICAgIGJsb2dQb3N0VGFnczogc3RhdGUgPT4gc3RhdGUuYmxvZ1Bvc3QuZGF0YS5UYWdzLm1hcCh0YWcgPT4gdGFnLm5hbWUpLA0KICAgICAgYmxvZ1Bvc3RJZDogc3RhdGUgPT4gc3RhdGUuYmxvZ1Bvc3QuZGF0YS5pZCwNCiAgICAgIG1vZGU6IHN0YXRlID0+IHN0YXRlLmJsb2dQb3N0Lm1vZGUNCiAgICB9KSwNCiAgICB0YWdJdGVtcygpIHsNCiAgICAgIHJldHVybiB0aGlzLmVkaXRvclRhZ3MubWFwKHRhZyA9PiAoew0KICAgICAgICBuYW1lOiB0YWcsDQogICAgICAgIGlkOiAwDQogICAgICB9KSk7DQogICAgfSwNCiAgICBlZGl0b3JWYWx1ZTogew0KICAgICAgZ2V0KCkgew0KICAgICAgICByZXR1cm4gdGhpcy5jdXJyZW50RWRpdG9yVmFsdWU7DQogICAgICB9LA0KICAgICAgc2V0KHZhbHVlKSB7DQogICAgICAgIHRoaXMuc2V0QmxvZ1Bvc3RDb250ZW50KHZhbHVlKTsNCiAgICAgIH0NCiAgICB9LA0KICAgIGVkaXRvclRhZ3M6IHsNCiAgICAgIGdldCgpIHsNCiAgICAgICAgcmV0dXJuIHRoaXMuYmxvZ1Bvc3RUYWdzOw0KICAgICAgfSwNCiAgICAgIHNldCh2YWx1ZSkgew0KICAgICAgICB0aGlzLnNldEJsb2dQb3N0VGFncyh2YWx1ZSk7DQogICAgICB9DQogICAgfQ0KICB9DQp9Ow0K"},{"version":3,"sources":["CreateBlogPostModal.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqfile":"CreateBlogPostModal.vue","sourceRoot":"src/components/Activities","sourcesContent":["<template>\r\n  <div class=\"create-post-modal-wrapper\">\r\n    <modal\r\n      class=\"create-post-modal modal-overlay--centered\"\r\n      :tags=\"tagItems\"\r\n      :settings=\"settings\"\r\n      @save=\"mode === modes['create'] ? createBlogPost() : updateBlogPost()\"\r\n    >\r\n      <template slot=\"body\">\r\n        <h3 class=\"title-wrapper\">Tags</h3>\r\n        <tag-input\r\n          class=\"post-tags-input\"\r\n          :list=\"editorTags\"\r\n          @listChange=\"updateList\"\r\n          placeholder=\"Add tag\"\r\n        />\r\n        <!-- @TODO change component -->\r\n        <form-rich-text-editor v-model=\"editorValue\" />\r\n        <template v-for=\"(selectsGroup, index) in selects\">\r\n          <h3 :key=\"`${selectsGroup.title}-${index}`\" class=\"title-wrapper\">\r\n            {{ selectsGroup.title }}\r\n          </h3>\r\n          <div :key=\"index\" class=\"selects-wrapper\">\r\n            <form-select\r\n              v-for=\"(select, index) in selectsGroup.content\"\r\n              :key=\"index\"\r\n              :title=\"select.title\"\r\n              :options=\"select.selectOptions\"\r\n            />\r\n          </div>\r\n        </template>\r\n      </template>\r\n    </modal>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\n/** @TODO add to a corresponding mixin */\r\nimport { feedTypes } from '@/services/feed.service';\r\nimport Modal from '../common/Modal';\r\nimport TagInput from '../common/Fields/TagInput';\r\nimport FormRichTextEditor from '../common/Fields/FormRichTextEditor';\r\nimport FormSelect from '../common/Fields/FormSelect';\r\nimport { createBlogPost, editBlogPost } from '@/services/Blog/blog.service';\r\nimport { modes } from '@/services/BlogPost/blogPost.service';\r\n\r\nexport default {\r\n  components: {\r\n    Modal,\r\n    TagInput,\r\n    FormRichTextEditor,\r\n    FormSelect\r\n  },\r\n  props: {\r\n    settings: {\r\n      type: Object,\r\n      required: true\r\n    }\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      alias: null,\r\n      modes,\r\n      /** @TODO use dynamic data instead */\r\n      selects: {\r\n        publishSelects: {\r\n          title: 'Publish post',\r\n          content: {\r\n            blogNameSelect: {\r\n              title: 'Blog name',\r\n              selectOptions: [\r\n                { id: 11, text: 'Blog name1' },\r\n                { id: 12, text: 'Blog name2' },\r\n                { id: 13, text: 'Blog name3' },\r\n                { id: 14, text: 'Blog name4' },\r\n                { id: 15, text: 'Blog name5' }\r\n              ]\r\n            },\r\n            visibleSelect: {\r\n              title: 'Visible for everyone',\r\n              selectOptions: [\r\n                { id: 16, text: 'Visible for everyone1' },\r\n                { id: 17, text: 'Visible for everyone2' },\r\n                { id: 18, text: 'Visible for everyone3' },\r\n                { id: 19, text: 'Visible for everyone4' },\r\n                { id: 20, text: 'Visible for everyone5' }\r\n              ]\r\n            },\r\n            disableCommentsSelect: {\r\n              title: 'Disable comments',\r\n              selectOptions: [\r\n                { id: 21, text: 'Disable comment1' },\r\n                { id: 22, text: 'Disable comment2' },\r\n                { id: 23, text: 'Disable comment3' },\r\n                { id: 24, text: 'Disable comment4' },\r\n                { id: 25, text: 'Disable comment5' }\r\n              ]\r\n            }\r\n          }\r\n        },\r\n        shareSelects: {\r\n          title: 'Share post',\r\n          content: {\r\n            blogNameSelect: {\r\n              title: 'Blog name',\r\n              selectOptions: [\r\n                { id: 11, text: 'Blog name1' },\r\n                { id: 12, text: 'Blog name2' },\r\n                { id: 13, text: 'Blog name3' },\r\n                { id: 14, text: 'Blog name4' },\r\n                { id: 15, text: 'Blog name5' }\r\n              ]\r\n            },\r\n            communityNameSelect: {\r\n              title: 'Community name',\r\n              selectOptions: [\r\n                { id: 16, text: 'Visible for everyone1' },\r\n                { id: 17, text: 'Visible for everyone2' },\r\n                { id: 18, text: 'Visible for everyone3' },\r\n                { id: 19, text: 'Visible for everyone4' },\r\n                { id: 20, text: 'Visible for everyone5' }\r\n              ]\r\n            }\r\n          }\r\n        }\r\n      }\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['getFeedData', 'setBlogPostContent', 'setBlogPostTags']),\r\n    /** @TODO fix form-rich text editor issue, when we click first time */\r\n    async createBlogPost() {\r\n      const {\r\n        meta: { page },\r\n        params: { id, name: paramsName }\r\n      } = this.$route;\r\n      let payload = {\r\n        alias: this.activeAliasId,\r\n        content: this.editorValue,\r\n        [page]: id ? +id : +paramsName,\r\n        tagNames: this.editorTags\r\n        // @TODO add tags + settings edit func https://temperance-software.atlassian.net/browse/FAN-184\r\n        // tags: [1, 2, 3],\r\n        // contentAccessControl: {\r\n        //   accessControlSetting: 'specificInclude',\r\n        //   aliases: [1]\r\n        // }\r\n      };\r\n      await createBlogPost(payload);\r\n      payload = null;\r\n      let createFeedPayload = { name: paramsName };\r\n      if (page === feedTypes.community) {\r\n        createFeedPayload = { id };\r\n      }\r\n      /** @TODO revise */\r\n      this.getFeedData({ ...createFeedPayload, pagination: 1, type: page });\r\n    },\r\n    async updateBlogPost() {\r\n      const payload = {\r\n        alias: this.activeAliasId,\r\n        content: this.editorValue,\r\n        tagNames: this.editorTags\r\n      };\r\n      await editBlogPost(this.blogPostId, payload);\r\n\r\n      const {\r\n        meta: { page },\r\n        params: { id, name: paramsName }\r\n      } = this.$route;\r\n      const createFeedPayload =\r\n        page === feedTypes.community ? { id } : { name: paramsName };\r\n      this.getFeedData({ ...createFeedPayload, pagination: 1, type: page });\r\n    },\r\n    updateList(list) {\r\n      this.editorTags = list;\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      activeAliasId: state => state.alias.activeAliasId,\r\n      currentEditorValue: state => state.blogPost.data.content,\r\n      blogPostTags: state => state.blogPost.data.Tags.map(tag => tag.name),\r\n      blogPostId: state => state.blogPost.data.id,\r\n      mode: state => state.blogPost.mode\r\n    }),\r\n    tagItems() {\r\n      return this.editorTags.map(tag => ({\r\n        name: tag,\r\n        id: 0\r\n      }));\r\n    },\r\n    editorValue: {\r\n      get() {\r\n        return this.currentEditorValue;\r\n      },\r\n      set(value) {\r\n        this.setBlogPostContent(value);\r\n      }\r\n    },\r\n    editorTags: {\r\n      get() {\r\n        return this.blogPostTags;\r\n      },\r\n      set(value) {\r\n        this.setBlogPostTags(value);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.create-post-modal {\r\n  &.modal-overlay--centered {\r\n    .selects-wrapper {\r\n      display: flex;\r\n    }\r\n\r\n    .title-wrapper {\r\n      font-size: var(--size-regular);\r\n      font-family: 'OpenSans-Bold', sans-serif;\r\n      margin-bottom: var(--element-margin-m);\r\n      color: var(--text-primary);\r\n    }\r\n\r\n    .post-tags-input {\r\n      margin-bottom: var(--element-margin-s);\r\n    }\r\n  }\r\n}\r\n\r\n::v-deep {\r\n  .rich-text-editor .textarea {\r\n    min-height: 214px;\r\n  }\r\n  .select-options-container {\r\n    margin-bottom: 0;\r\n  }\r\n\r\n  .modal {\r\n    margin: 0 auto;\r\n    width: var(--width-medium);\r\n    overflow: visible;\r\n\r\n    &-content {\r\n      margin: 0;\r\n    }\r\n  }\r\n  .modal-header,\r\n  .modal-footer {\r\n    background-color: var(--BG-create-post-modal);\r\n  }\r\n  .modal-body {\r\n    background-color: var(--BG-create-post-modal-body);\r\n  }\r\n  .select {\r\n    width: 170px;\r\n    min-width: 170px;\r\n    margin: 0 var(--element-margin-s) var(--element-margin-l) 0;\r\n\r\n    button,\r\n    ul {\r\n      border-color: var(--tab-normal);\r\n    }\r\n    button {\r\n      padding: var(--button-padding-s) var(--element-padding-s);\r\n    }\r\n\r\n    &:last-child {\r\n      margin-right: 0;\r\n    }\r\n  }\r\n\r\n  .form-input input {\r\n    padding: var(--element-padding-xs) var(--element-padding-xs)\r\n      var(--element-padding-xs) var(--element-padding-xl);\r\n  }\r\n  .tags-list {\r\n    padding: 0 0 var(--element-padding-l) 0;\r\n    &__item {\r\n      padding: var(--element-padding-s);\r\n    }\r\n  }\r\n}\r\n</style>\r\n"]}]}