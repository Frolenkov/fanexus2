{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Projects\\fanexus\\src\\services\\block.service.js","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\services\\block.service.js","mtime":1594272612273},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0IHsgcHV0LCByZW1vdmUgfSBmcm9tICd+YXBpJzsKZXhwb3J0IHZhciBibG9ja1Jvb3QgPSAnYmxvY2snOwpleHBvcnQgdmFyIGNyZWF0ZUJsb2NrID0gZnVuY3Rpb24gY3JlYXRlQmxvY2soaWQsIGVudGl0eSwgcGF5bG9hZCkgewogIHJldHVybiBwdXQoIiIuY29uY2F0KGJsb2NrUm9vdCwgIi8iKS5jb25jYXQoZW50aXR5LCAiLyIpLmNvbmNhdChpZCksIHBheWxvYWQpOwp9OwpleHBvcnQgdmFyIGRlbGV0ZUJsb2NrID0gZnVuY3Rpb24gZGVsZXRlQmxvY2soaWQsIGVudGl0eSkgewogIHJldHVybiByZW1vdmUoIiIuY29uY2F0KGJsb2NrUm9vdCwgIi8iKS5jb25jYXQoZW50aXR5LCAiLyIpLmNvbmNhdChpZCkpOwp9OwpleHBvcnQgdmFyIGJsb2NrVHlwZXMgPSB7CiAgYmxvZzogJ2Jsb2cnLAogIGNvbW11bml0eTogJ2NvbW11bml0eScsCiAgdGFnOiAndGFnJwp9Ow=="},{"version":3,"sources":["F:/Projects/fanexus/src/services/block.service.js"],"names":["put","remove","blockRoot","createBlock","id","entity","payload","deleteBlock","blockTypes","blog","community","tag"],"mappings":";AAAA,SAASA,GAAT,EAAcC,MAAd,QAA4B,MAA5B;AACA,OAAO,IAAMC,SAAS,GAAG,OAAlB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAKC,MAAL,EAAaC,OAAb;AAAA,SACzBN,GAAG,WAAIE,SAAJ,cAAiBG,MAAjB,cAA2BD,EAA3B,GAAiCE,OAAjC,CADsB;AAAA,CAApB;AAEP,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACH,EAAD,EAAKC,MAAL;AAAA,SACzBJ,MAAM,WAAIC,SAAJ,cAAiBG,MAAjB,cAA2BD,EAA3B,EADmB;AAAA,CAApB;AAGP,OAAO,IAAMI,UAAU,GAAG;AACxBC,EAAAA,IAAI,EAAE,MADkB;AAExBC,EAAAA,SAAS,EAAE,WAFa;AAGxBC,EAAAA,GAAG,EAAE;AAHmB,CAAnB","sourcesContent":["import { put, remove } from '~api';\r\nexport const blockRoot = 'block';\r\n\r\nexport const createBlock = (id, entity, payload) =>\r\n  put(`${blockRoot}/${entity}/${id}`, payload);\r\nexport const deleteBlock = (id, entity) =>\r\n  remove(`${blockRoot}/${entity}/${id}`);\r\n\r\nexport const blockTypes = {\r\n  blog: 'blog',\r\n  community: 'community',\r\n  tag: 'tag'\r\n};\r\n"]}]}