{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Projects\\fanexus\\src\\mixins\\validation.mixin.js","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\mixins\\validation.mixin.js","mtime":1598010030217},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmluZC1pbmRleCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZvci1lYWNoIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc3BsaWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC5nZXQtb3duLXByb3BlcnR5LWRlc2NyaXB0b3JzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmtleXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKaW1wb3J0IF9kZWZpbmVQcm9wZXJ0eSBmcm9tICJGOlxcUHJvamVjdHNcXGZhbmV4dXNcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2RlZmluZVByb3BlcnR5IjsKCmZ1bmN0aW9uIG93bktleXMob2JqZWN0LCBlbnVtZXJhYmxlT25seSkgeyB2YXIga2V5cyA9IE9iamVjdC5rZXlzKG9iamVjdCk7IGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7IHZhciBzeW1ib2xzID0gT2JqZWN0LmdldE93blByb3BlcnR5U3ltYm9scyhvYmplY3QpOyBpZiAoZW51bWVyYWJsZU9ubHkpIHN5bWJvbHMgPSBzeW1ib2xzLmZpbHRlcihmdW5jdGlvbiAoc3ltKSB7IHJldHVybiBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKG9iamVjdCwgc3ltKS5lbnVtZXJhYmxlOyB9KTsga2V5cy5wdXNoLmFwcGx5KGtleXMsIHN5bWJvbHMpOyB9IHJldHVybiBrZXlzOyB9CgpmdW5jdGlvbiBfb2JqZWN0U3ByZWFkKHRhcmdldCkgeyBmb3IgKHZhciBpID0gMTsgaSA8IGFyZ3VtZW50cy5sZW5ndGg7IGkrKykgeyB2YXIgc291cmNlID0gYXJndW1lbnRzW2ldICE9IG51bGwgPyBhcmd1bWVudHNbaV0gOiB7fTsgaWYgKGkgJSAyKSB7IG93bktleXMoT2JqZWN0KHNvdXJjZSksIHRydWUpLmZvckVhY2goZnVuY3Rpb24gKGtleSkgeyBfZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHNvdXJjZVtrZXldKTsgfSk7IH0gZWxzZSBpZiAoT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnMpIHsgT2JqZWN0LmRlZmluZVByb3BlcnRpZXModGFyZ2V0LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycyhzb3VyY2UpKTsgfSBlbHNlIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcihzb3VyY2UsIGtleSkpOyB9KTsgfSB9IHJldHVybiB0YXJnZXQ7IH0KCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoewogICAgICBtZXNzYWdlczogewogICAgICAgIHBhc3N3b3Jkc01hdGNoOiAnUGFzc3dvcmRzIG11c3QgbWF0Y2gnLAogICAgICAgIG5ld1Bhc3N3b3Jkc01hdGNoOiAnVGhlIG5ldyBwYXNzd29yZHMgZG8gbm90IG1hdGNoJwogICAgICB9CiAgICB9LCAhdGhpcy5lcnJvcnMgJiYgewogICAgICBlcnJvcnM6IHt9CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBuYW1lRXJyb3JzOiBmdW5jdGlvbiBuYW1lRXJyb3JzKCkgewogICAgICByZXR1cm4gdGhpcy5maW5kRXJyb3JzKCduYW1lJykubWFwKGZ1bmN0aW9uIChuYW1lRXJyb3IpIHsKICAgICAgICByZXR1cm4gX29iamVjdFNwcmVhZCh7fSwgbmFtZUVycm9yLCB7fSwgbmFtZUVycm9yLnR5cGUgPT09ICdub3ROdWxsIFZpb2xhdGlvbicgJiYgewogICAgICAgICAgbWVzc2FnZTogJ1RoZSBuYW1lIGlzIHJlcXVpcmVkLicKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgbGlua0Vycm9yczogZnVuY3Rpb24gbGlua0Vycm9ycygpIHsKICAgICAgcmV0dXJuIHRoaXMuZmluZEVycm9ycygnbGluaycpLm1hcChmdW5jdGlvbiAobGlua0Vycm9yKSB7CiAgICAgICAgcmV0dXJuIF9vYmplY3RTcHJlYWQoe30sIGxpbmtFcnJvciwgewogICAgICAgICAgbWVzc2FnZTogbGlua0Vycm9yLnR5cGUgPT09ICd1bmlxdWUgdmlvbGF0aW9uJyA/ICJUaGlzIGxpbmsgaGFzIGFscmVhZHkgYmVlbiB0YWtlbi4iIDogIlRoZSBsaW5rIGlzIHJlcXVpcmVkLiIKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9LAogICAgZGVzY3JpcHRpb25FcnJvcnM6IGZ1bmN0aW9uIGRlc2NyaXB0aW9uRXJyb3JzKCkgewogICAgICByZXR1cm4gdGhpcy5maW5kRXJyb3JzKCdkZXNjcmlwdGlvbicpLm1hcChmdW5jdGlvbiAoZGVzY3JpcHRpb25FcnJvcikgewogICAgICAgIHJldHVybiBfb2JqZWN0U3ByZWFkKHt9LCBkZXNjcmlwdGlvbkVycm9yLCB7fSwgZGVzY3JpcHRpb25FcnJvci50eXBlID09PSAnbm90TnVsbCBWaW9sYXRpb24nICYmIHsKICAgICAgICAgIG1lc3NhZ2U6ICdUaGUgZGVzY3JpcHRpb24gaXMgcmVxdWlyZWQuJwogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIGNoZWNrUGFzc3dvcmRzOiBmdW5jdGlvbiBjaGVja1Bhc3N3b3Jkcyhmb3JtRGF0YSwgcmVmcykgewogICAgICB2YXIgcGFzc3dvcmRzTWF0Y2ggPSB0aGlzLm1lc3NhZ2VzLnBhc3N3b3Jkc01hdGNoOwogICAgICB2YXIgcGFzc3dvcmQgPSBmb3JtRGF0YS5wYXNzd29yZCwKICAgICAgICAgIHBhc3N3b3JkQ29uZmlybSA9IGZvcm1EYXRhLnBhc3N3b3JkQ29uZmlybTsKICAgICAgdmFyIHBhc3N3b3JkQ29uZmlybVJlZiA9IHJlZnMucGFzc3dvcmRDb25maXJtUmVmOwogICAgICBpZiAoIXBhc3N3b3JkQ29uZmlybVJlZikgcmV0dXJuOwogICAgICB2YXIgbWVzc2FnZSA9IHBhc3N3b3JkICE9PSBwYXNzd29yZENvbmZpcm0gPyBwYXNzd29yZHNNYXRjaCA6ICcnOwoKICAgICAgaWYgKG1lc3NhZ2UpIHsKICAgICAgICB0aGlzLiRzZXQodGhpcy5lcnJvcnMsICdwYXNzd29yZCcsIHsKICAgICAgICAgIG1hdGNoOiBtZXNzYWdlCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy4kZGVsZXRlKHRoaXMuZXJyb3JzLCAncGFzc3dvcmQnKTsKICAgICAgfQoKICAgICAgdmFyIGlucHV0ID0gcGFzc3dvcmRDb25maXJtUmVmLiRlbC5xdWVyeVNlbGVjdG9yKCdpbnB1dCcpOwoKICAgICAgaWYgKGlucHV0KSB7CiAgICAgICAgaW5wdXQuc2V0Q3VzdG9tVmFsaWRpdHkobWVzc2FnZSk7CiAgICAgIH0KCiAgICAgIHJldHVybiAhbWVzc2FnZTsKICAgIH0sCiAgICBjaGVja05ld1Bhc3N3b3JkczogZnVuY3Rpb24gY2hlY2tOZXdQYXNzd29yZHMobmV3UGFzc3dvcmQsIGNvbmZpcm1OZXdQYXNzd29yZCkgewogICAgICByZXR1cm4gbmV3UGFzc3dvcmQgPT09IGNvbmZpcm1OZXdQYXNzd29yZCA/IFtdIDogW3sKICAgICAgICBtZXNzYWdlOiB0aGlzLm1lc3NhZ2VzLm5ld1Bhc3N3b3Jkc01hdGNoCiAgICAgIH1dOwogICAgfSwKICAgIGNoZWNrQ2xpZW50VmFsaWRhdGlvbjogZnVuY3Rpb24gY2hlY2tDbGllbnRWYWxpZGF0aW9uKF9yZWYpIHsKICAgICAgdmFyIF9yZWYkZm9ybURhdGEgPSBfcmVmLmZvcm1EYXRhLAogICAgICAgICAgZm9ybURhdGEgPSBfcmVmJGZvcm1EYXRhID09PSB2b2lkIDAgPyB0aGlzLmZvcm1EYXRhIDogX3JlZiRmb3JtRGF0YSwKICAgICAgICAgIHJlZnMgPSBfcmVmLnJlZnM7CiAgICAgIGlmICghZm9ybURhdGEpIHJldHVybiBmYWxzZTsKCiAgICAgIGlmIChyZWZzICYmIHJlZnMucGFzc3dvcmRDb25maXJtUmVmICYmIGZvcm1EYXRhLnBhc3N3b3JkICYmIGZvcm1EYXRhLnBhc3N3b3JkQ29uZmlybSkgewogICAgICAgIHJldHVybiB0aGlzLmNoZWNrUGFzc3dvcmRzKGZvcm1EYXRhLCByZWZzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHRydWU7CiAgICB9LAogICAgZmluZEVycm9yczogZnVuY3Rpb24gZmluZEVycm9ycyhwYXRoKSB7CiAgICAgIHJldHVybiB0aGlzLmVycm9ycy5maWx0ZXIoZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGVycm9yLnBhdGggPT09IHBhdGg7CiAgICAgIH0pOwogICAgfSwKICAgIGNsZWFyRXJyb3I6IGZ1bmN0aW9uIGNsZWFyRXJyb3IocGF0aCkgewogICAgICB2YXIgaW5kZXggPSB0aGlzLmVycm9ycy5maW5kSW5kZXgoZnVuY3Rpb24gKGVycm9yKSB7CiAgICAgICAgcmV0dXJuIGVycm9yLnBhdGggPT09IHBhdGg7CiAgICAgIH0pOwoKICAgICAgaWYgKGluZGV4ID4gLTEpIHsKICAgICAgICB0aGlzLmVycm9ycy5zcGxpY2UodGhpcy5lcnJvcnMuZmluZEluZGV4KGZ1bmN0aW9uIChlcnJvcikgewogICAgICAgICAgcmV0dXJuIGVycm9yLnBhdGggPT09IHBhdGg7CiAgICAgICAgfSksIDEpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["F:/Projects/fanexus/src/mixins/validation.mixin.js"],"names":["data","messages","passwordsMatch","newPasswordsMatch","errors","computed","nameErrors","findErrors","map","nameError","type","message","linkErrors","linkError","descriptionErrors","descriptionError","methods","checkPasswords","formData","refs","password","passwordConfirm","passwordConfirmRef","$set","match","$delete","input","$el","querySelector","setCustomValidity","checkNewPasswords","newPassword","confirmNewPassword","checkClientValidation","path","filter","error","clearError","index","findIndex","splice"],"mappings":"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","sourcesContent":["export default {\r\n  data() {\r\n    return {\r\n      messages: {\r\n        passwordsMatch: 'Passwords must match',\r\n        newPasswordsMatch: 'The new passwords do not match'\r\n      },\r\n      ...(!this.errors && { errors: {} })\r\n    };\r\n  },\r\n  computed: {\r\n    nameErrors() {\r\n      return this.findErrors('name').map(nameError => ({\r\n        ...nameError,\r\n        ...(nameError.type === 'notNull Violation' && {\r\n          message: 'The name is required.'\r\n        })\r\n      }));\r\n    },\r\n    linkErrors() {\r\n      return this.findErrors('link').map(linkError => ({\r\n        ...linkError,\r\n        message:\r\n          linkError.type === 'unique violation'\r\n            ? `This link has already been taken.`\r\n            : `The link is required.`\r\n      }));\r\n    },\r\n    descriptionErrors() {\r\n      return this.findErrors('description').map(descriptionError => ({\r\n        ...descriptionError,\r\n        ...(descriptionError.type === 'notNull Violation' && {\r\n          message: 'The description is required.'\r\n        })\r\n      }));\r\n    }\r\n  },\r\n  methods: {\r\n    checkPasswords(formData, refs) {\r\n      const { passwordsMatch } = this.messages;\r\n      const { password, passwordConfirm } = formData;\r\n      const { passwordConfirmRef } = refs;\r\n      if (!passwordConfirmRef) return;\r\n      const message = password !== passwordConfirm ? passwordsMatch : '';\r\n\r\n      if (message) {\r\n        this.$set(this.errors, 'password', { match: message });\r\n      } else {\r\n        this.$delete(this.errors, 'password');\r\n      }\r\n      const input = passwordConfirmRef.$el.querySelector('input');\r\n      if (input) {\r\n        input.setCustomValidity(message);\r\n      }\r\n\r\n      return !message;\r\n    },\r\n    checkNewPasswords(newPassword, confirmNewPassword) {\r\n      return newPassword === confirmNewPassword\r\n        ? []\r\n        : [{ message: this.messages.newPasswordsMatch }];\r\n    },\r\n    checkClientValidation({ formData = this.formData, refs }) {\r\n      if (!formData) return false;\r\n\r\n      if (\r\n        refs &&\r\n        refs.passwordConfirmRef &&\r\n        formData.password &&\r\n        formData.passwordConfirm\r\n      ) {\r\n        return this.checkPasswords(formData, refs);\r\n      }\r\n\r\n      return true;\r\n    },\r\n    findErrors(path) {\r\n      return this.errors.filter(function(error) {\r\n        return error.path === path;\r\n      });\r\n    },\r\n    clearError(path) {\r\n      const index = this.errors.findIndex(error => error.path === path);\r\n      if (index > -1) {\r\n        this.errors.splice(\r\n          this.errors.findIndex(error => error.path === path),\r\n          1\r\n        );\r\n      }\r\n    }\r\n  }\r\n};\r\n"]}]}