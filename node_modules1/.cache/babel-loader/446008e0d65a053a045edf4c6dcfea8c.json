{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\Projects\\fanexus\\src\\components\\Blog\\BlogPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\components\\Blog\\BlogPost.vue","mtime":1593701750810},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QuZ2V0LW93bi1wcm9wZXJ0eS1kZXNjcmlwdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LmdldC1vd24tcHJvcGVydHktZGVzY3JpcHRvcnMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2giOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZSI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJJOlxcUHJvamVjdHNcXGZhbmV4dXNcXG5vZGVfbW9kdWxlc1xcQGJhYmVsXFxydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgX2RlZmluZVByb3BlcnR5IGZyb20gIkk6XFxQcm9qZWN0c1xcZmFuZXh1c1xcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWUvaGVscGVycy9lc20vZGVmaW5lUHJvcGVydHkiOwoKZnVuY3Rpb24gb3duS2V5cyhvYmplY3QsIGVudW1lcmFibGVPbmx5KSB7IHZhciBrZXlzID0gT2JqZWN0LmtleXMob2JqZWN0KTsgaWYgKE9iamVjdC5nZXRPd25Qcm9wZXJ0eVN5bWJvbHMpIHsgdmFyIHN5bWJvbHMgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKG9iamVjdCk7IGlmIChlbnVtZXJhYmxlT25seSkgc3ltYm9scyA9IHN5bWJvbHMuZmlsdGVyKGZ1bmN0aW9uIChzeW0pIHsgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3Iob2JqZWN0LCBzeW0pLmVudW1lcmFibGU7IH0pOyBrZXlzLnB1c2guYXBwbHkoa2V5cywgc3ltYm9scyk7IH0gcmV0dXJuIGtleXM7IH0KCmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQodGFyZ2V0KSB7IGZvciAodmFyIGkgPSAxOyBpIDwgYXJndW1lbnRzLmxlbmd0aDsgaSsrKSB7IHZhciBzb3VyY2UgPSBhcmd1bWVudHNbaV0gIT0gbnVsbCA/IGFyZ3VtZW50c1tpXSA6IHt9OyBpZiAoaSAlIDIpIHsgb3duS2V5cyhPYmplY3Qoc291cmNlKSwgdHJ1ZSkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7IF9kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgc291cmNlW2tleV0pOyB9KTsgfSBlbHNlIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9ycykgeyBPYmplY3QuZGVmaW5lUHJvcGVydGllcyh0YXJnZXQsIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzKHNvdXJjZSkpOyB9IGVsc2UgeyBvd25LZXlzKE9iamVjdChzb3VyY2UpKS5mb3JFYWNoKGZ1bmN0aW9uIChrZXkpIHsgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHNvdXJjZSwga2V5KSk7IH0pOyB9IH0gcmV0dXJuIHRhcmdldDsgfQoKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IHsgbWFwU3RhdGUsIG1hcEFjdGlvbnMgfSBmcm9tICd2dWV4JzsKaW1wb3J0IHsgcG9zdExpa2UsIHBvc3RVbmxpa2UgfSBmcm9tICdAL3NlcnZpY2VzL0Jsb2cvYmxvZy5zZXJ2aWNlJzsKaW1wb3J0IGRyb3Bkb3duT3B0aW9ucyBmcm9tICdAL3NlcnZpY2VzL0Jsb2dQb3N0L2Jsb2dQb3N0LmRyb3Bkb3duT3B0aW9ucyc7CmltcG9ydCB7IGNyZWF0ZUNvbW1lbnQgfSBmcm9tICdAL3NlcnZpY2VzL0NvbW1lbnQvY29tbWVudC5zZXJ2aWNlJzsKaW1wb3J0IENvbW1lbnRzIGZyb20gJ0AvY29tcG9uZW50cy9jb21tb24vQ29tbWVudHMvQ29tbWVudHMnOwppbXBvcnQgQXV0aG9yVGl0bGUgZnJvbSAnfmNvbW1vbi9BdXRob3JUaXRsZSc7CmltcG9ydCBUYWdzTGlzdCBmcm9tICd+Y29tbW9uL1RhZ3NMaXN0JzsKaW1wb3J0IEFjdGlvbkJ1dHRvbnNHcm91cCBmcm9tICd+Y29tbW9uL0FjdGlvbkJ1dHRvbnNHcm91cCc7CmV4cG9ydCBkZWZhdWx0IHsKICBwcm9wczogewogICAgZGF0YTogewogICAgICB0eXBlOiBPYmplY3QsCiAgICAgIHJlcXVpcmVkOiB0cnVlCiAgICB9LAogICAgc2hvd0NvbW1lbnRzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBzaG93QWN0aW9uQnV0dG9uczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgZGlzYWJsZWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0KICB9LAogIGNvbXBvbmVudHM6IHsKICAgIEF1dGhvclRpdGxlOiBBdXRob3JUaXRsZSwKICAgIFRhZ3NMaXN0OiBUYWdzTGlzdCwKICAgIEFjdGlvbkJ1dHRvbnNHcm91cDogQWN0aW9uQnV0dG9uc0dyb3VwLAogICAgQ29tbWVudHM6IENvbW1lbnRzCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbmV3Q29tbWVudDogJycsCiAgICAgIGRyb3Bkb3duT3B0aW9uczogZHJvcGRvd25PcHRpb25zCiAgICB9OwogIH0sCiAgbWV0aG9kczogX29iamVjdFNwcmVhZCh7fSwgbWFwQWN0aW9ucyhbJ3VwZGF0ZUJsb2dQb3N0RGF0YScsICdkZWxldGVCbG9nUG9zdCcsICduYXZpZ2F0ZUFuZFNldEJsb2dQb3N0SWQnLCAnc2V0QmxvZ1Bvc3RJZCcsICdzZXRFZGl0QmxvZ1Bvc3QnXSksIHsKICAgIGRlbGV0ZUJsb2dQb3N0SGFuZGxlcjogZnVuY3Rpb24gZGVsZXRlQmxvZ1Bvc3RIYW5kbGVyKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUoKSB7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDI7CiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMuZGVsZXRlQmxvZ1Bvc3QoewogICAgICAgICAgICAgICAgICBpZDogX3RoaXMuZGF0YS5pZCwKICAgICAgICAgICAgICAgICAgcGF5bG9hZDogewogICAgICAgICAgICAgICAgICAgIGFsaWFzOiBfdGhpcy5hY3RpdmVBbGlhc0lkCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpKCk7CiAgICB9LAogICAgZWRpdEJsb2dQb3N0SGFuZGxlcjogZnVuY3Rpb24gZWRpdEJsb2dQb3N0SGFuZGxlcigpIHsKICAgICAgdGhpcy5zZXRFZGl0QmxvZ1Bvc3QodGhpcy5kYXRhKTsKICAgIH0sCgogICAgLyoqIEBUT0RPIG1ha2UgaXQgY29tbW9uICovCiAgICByZWZyZXNoOiBmdW5jdGlvbiByZWZyZXNoKCkgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMigpIHsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMi51cGRhdGVCbG9nUG9zdERhdGEoX3RoaXMyLmRhdGEuaWQpOwoKICAgICAgICAgICAgICBjYXNlIDI6CiAgICAgICAgICAgICAgICBfdGhpczIubmV3Q29tbWVudCA9ICcnOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCgogICAgLypAVE9ETyBtYWtlIGl0IGR5bmFtaWMgYW5kIHJldmlzZSBkbyB3ZSBuZWVkIGNvbW1lbnQgaWQqLwogICAgaGFuZGxlQ3JlYXRlQ29tbWVudDogZnVuY3Rpb24gaGFuZGxlQ3JlYXRlQ29tbWVudChwYXJlbnRDb21tZW50KSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKAogICAgICAvKiNfX1BVUkVfXyovCiAgICAgIHJlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBwYXlsb2FkOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBpZiAoX3RoaXMzLm5ld0NvbW1lbnQpIHsKICAgICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAyOwogICAgICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgICAgIGNhc2UgMjoKICAgICAgICAgICAgICAgIHBheWxvYWQgPSB7CiAgICAgICAgICAgICAgICAgIGFsaWFzOiBfdGhpczMuYWN0aXZlQWxpYXNJZCwKICAgICAgICAgICAgICAgICAgY29udGVudDogX3RoaXMzLm5ld0NvbW1lbnQKICAgICAgICAgICAgICAgIH07CgogICAgICAgICAgICAgICAgaWYgKHBhcmVudENvbW1lbnQpIHsKICAgICAgICAgICAgICAgICAgcGF5bG9hZC5wYXJlbnRDb21tZW50ID0gcGFyZW50Q29tbWVudDsKICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgIHBheWxvYWQuYmxvZ1Bvc3QgPSBfdGhpczMuZGF0YS5pZDsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDc7CiAgICAgICAgICAgICAgICByZXR1cm4gY3JlYXRlQ29tbWVudChwYXlsb2FkKTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA5OwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzMy5yZWZyZXNoKCk7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTQ7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTE7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oNCk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLmFicnVwdCgicmV0dXJuIiwgZmFsc2UpOwoKICAgICAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzQsIDExXV0pOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBvcGVuQmxvZ1Bvc3RNb2RhbDogZnVuY3Rpb24gb3BlbkJsb2dQb3N0TW9kYWwoKSB7CiAgICAgIC8qKiBAVE9ETyB0ZW1wIHNvbHV0aW9uLCByZXZpc2UgdG8gdXNlIHByb3AgbGlrZSAiaW5Nb2RhbCIgKi8KICAgICAgaWYgKHRoaXMuc2hvd0NvbW1lbnRzKSByZXR1cm47CiAgICAgIHJldHVybiB0aGlzLm5hdmlnYXRlQW5kU2V0QmxvZ1Bvc3RJZCh0aGlzLmRhdGEuaWQpOwogICAgfSwKICAgIHBvc3RMaWtlVG9nZ2xlOiBmdW5jdGlvbiBwb3N0TGlrZVRvZ2dsZSgpIHsKICAgICAgdmFyIF90aGlzNCA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTQoKSB7CiAgICAgICAgdmFyIF90aGlzNCRkYXRhLCBpZCwgdXNlckxpa2VkLCBib2R5OwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTQkKF9jb250ZXh0NCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDQucHJldiA9IF9jb250ZXh0NC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX3RoaXM0JGRhdGEgPSBfdGhpczQuZGF0YSwgaWQgPSBfdGhpczQkZGF0YS5pZCwgdXNlckxpa2VkID0gX3RoaXM0JGRhdGEudXNlckxpa2VkOwogICAgICAgICAgICAgICAgYm9keSA9IFtpZCwgewogICAgICAgICAgICAgICAgICBhbGlhczogX3RoaXM0LmFjdGl2ZUFsaWFzSWQKICAgICAgICAgICAgICAgIH1dOwoKICAgICAgICAgICAgICAgIGlmICghdXNlckxpa2VkKSB7CiAgICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gNzsKICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHBvc3RVbmxpa2UuYXBwbHkodm9pZCAwLCBib2R5KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgICAgX2NvbnRleHQ0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICAgIF9jb250ZXh0NC5uZXh0ID0gOTsKICAgICAgICAgICAgICAgIHJldHVybiBwb3N0TGlrZS5hcHBseSh2b2lkIDAsIGJvZHkpOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgcmV0dXJuIF90aGlzNC5yZWZyZXNoKCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTQpOwogICAgICB9KSkoKTsKICAgIH0KICB9KSwKICBjb21wdXRlZDogX29iamVjdFNwcmVhZCh7fSwgbWFwU3RhdGUoewogICAgdXNlckRhdGE6IGZ1bmN0aW9uIHVzZXJEYXRhKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5hdXRoLnVzZXJEYXRhOwogICAgfSwKICAgIGFjdGl2ZUFsaWFzSWQ6IGZ1bmN0aW9uIGFjdGl2ZUFsaWFzSWQoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmFsaWFzLmFjdGl2ZUFsaWFzSWQ7CiAgICB9CiAgfSkpCn07"},{"version":3,"sources":["BlogPost.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <article class=\"blog-post\">\r\n    <header class=\"blog-post__header\" slot=\"header\">\r\n      <author-title\r\n        class=\"blog-post__header-title\"\r\n        @click.native.stop=\"openBlogPostModal\"\r\n        :name=\"data.Alias.name\"\r\n        :image=\"data.Alias.avatar.src\"\r\n        :date=\"data.updatedAt\"\r\n        :alt=\"data.Alias.avatar.alt\"\r\n      />\r\n      <tags-list\r\n        v-if=\"data && data.Tags\"\r\n        :list=\"data.Tags\"\r\n        @click.native.stop\r\n        :disabled=\"disabled\"\r\n        @close=\"$emit('close')\"\r\n      />\r\n    </header>\r\n    <div class=\"blog-post__body\">\r\n      <img\r\n        class=\"blog-post__body-image\"\r\n        v-if=\"data && data.image\"\r\n        :src=\"data.image.src\"\r\n        :alt=\"data.image.name\"\r\n      />\r\n      <p\r\n        class=\"blog-post__body-content\"\r\n        @click.stop=\"openBlogPostModal\"\r\n        v-html=\"data.content\"\r\n      />\r\n    </div>\r\n    <action-buttons-group\r\n      v-if=\"showActionButtons\"\r\n      :engagementStats=\"data.engagementStats\"\r\n      :userHasEditPermissions=\"data.userHasEditPermissions\"\r\n      @click.native.stop\r\n      @likeClicked=\"postLikeToggle\"\r\n      @delete=\"deleteBlogPostHandler\"\r\n      @edit=\"editBlogPostHandler\"\r\n      :userLiked=\"data.userLiked\"\r\n      :options=\"dropdownOptions\"\r\n      :disabled=\"disabled\"\r\n      @openBlogPostModal=\"openBlogPostModal\"\r\n    />\r\n    <comments\r\n      slot=\"footer\"\r\n      v-if=\"showComments\"\r\n      :blogPostId=\"data.id\"\r\n      :newComment=\"newComment\"\r\n      :comments=\"data.Comments\"\r\n      @createComment=\"handleCreateComment\"\r\n      @newCommentInput=\"$newComment => (newComment = $newComment)\"\r\n    />\r\n  </article>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\nimport { postLike, postUnlike } from '@/services/Blog/blog.service';\r\nimport dropdownOptions from '@/services/BlogPost/blogPost.dropdownOptions';\r\nimport { createComment } from '@/services/Comment/comment.service';\r\nimport Comments from '@/components/common/Comments/Comments';\r\nimport AuthorTitle from '~common/AuthorTitle';\r\nimport TagsList from '~common/TagsList';\r\nimport ActionButtonsGroup from '~common/ActionButtonsGroup';\r\n\r\nexport default {\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    showComments: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showActionButtons: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  components: {\r\n    AuthorTitle,\r\n    TagsList,\r\n    ActionButtonsGroup,\r\n    Comments\r\n  },\r\n  data() {\r\n    return {\r\n      newComment: '',\r\n      dropdownOptions\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\r\n      'updateBlogPostData',\r\n      'deleteBlogPost',\r\n      'navigateAndSetBlogPostId',\r\n      'setBlogPostId',\r\n      'setEditBlogPost'\r\n    ]),\r\n    async deleteBlogPostHandler() {\r\n      await this.deleteBlogPost({\r\n        id: this.data.id,\r\n        payload: { alias: this.activeAliasId }\r\n      });\r\n    },\r\n    editBlogPostHandler() {\r\n      this.setEditBlogPost(this.data);\r\n    },\r\n    /** @TODO make it common */\r\n    async refresh() {\r\n      await this.updateBlogPostData(this.data.id);\r\n      this.newComment = '';\r\n    },\r\n    /*@TODO make it dynamic and revise do we need comment id*/\r\n    async handleCreateComment(parentComment) {\r\n      if (!this.newComment) return;\r\n\r\n      const payload = {\r\n        alias: this.activeAliasId,\r\n        content: this.newComment\r\n      };\r\n      if (parentComment) {\r\n        payload.parentComment = parentComment;\r\n      } else {\r\n        payload.blogPost = this.data.id;\r\n      }\r\n\r\n      try {\r\n        await createComment(payload);\r\n        await this.refresh();\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    },\r\n    openBlogPostModal() {\r\n      /** @TODO temp solution, revise to use prop like \"inModal\" */\r\n      if (this.showComments) return;\r\n      return this.navigateAndSetBlogPostId(this.data.id);\r\n    },\r\n    async postLikeToggle() {\r\n      const { id, userLiked } = this.data;\r\n      const body = [id, { alias: this.activeAliasId }];\r\n\r\n      userLiked ? await postUnlike(...body) : await postLike(...body);\r\n      await this.refresh();\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      userData: state => state.auth.userData,\r\n      activeAliasId: state => state.alias.activeAliasId\r\n    })\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.feed-news .blog-post {\r\n  &:hover {\r\n    box-shadow: var(--box-shadow);\r\n    /** @TODO revise styles */\r\n    // cursor: pointer;\r\n  }\r\n}\r\n.blog-post {\r\n  background-color: var(--BG-blog-post);\r\n  border-radius: var(--border-radius);\r\n  transition: var(--transition-default);\r\n  &__header {\r\n    margin: 0 var(--element-margin-l);\r\n    padding-top: var(--element-padding-l);\r\n    &-title {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  &__body {\r\n    &-image {\r\n      width: 100%;\r\n      height: auto;\r\n      object-fit: cover;\r\n    }\r\n    &-content {\r\n      color: var(--text-primary);\r\n      font-size: var(--size-regular);\r\n      line-height: 1.3em;\r\n      margin-bottom: var(--element-margin-m);\r\n      padding: 0 var(--element-padding-m);\r\n      word-break: break-word;\r\n      cursor: pointer;\r\n\r\n      /** @TODO revise styles */\r\n      ::v-deep {\r\n        a {\r\n          color: var(--text-secondary);\r\n          display: block;\r\n          max-width: 100%;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n        }\r\n        h1,\r\n        h2 {\r\n          line-height: 1.5em;\r\n        }\r\n\r\n        ul {\r\n          padding-left: var(--element-padding-xl);\r\n        }\r\n\r\n        ol {\r\n          padding-left: var(--element-padding-m);\r\n        }\r\n\r\n        img {\r\n          margin: var(--element-margin-s) 0;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Blog"}]}