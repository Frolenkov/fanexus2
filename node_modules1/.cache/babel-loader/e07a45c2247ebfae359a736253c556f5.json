{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Projects\\fanexus\\src\\store\\modules\\feed.module.js","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\store\\modules\\feed.module.js","mtime":1598358809818},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/Projects/fanexus/src/store/modules/feed.module.js"],"names":["Vue","feedTypes","getNewsFeed","getBlogPost","deleteBlogPost","getBlogData","getTaggedBlogPosts","getBlogPostLikes","getCommentLikes","getComment","getCommunity","isIndexExists","getIndexById","defaultPage","state","type","currentPage","data","BlogPosts","id","Tags","communityRules","actions","setFeedPage","commit","dispatch","page","pagination","getFeedData","payload","blog","community","tagged","likes","comments","getData","response","status","index","updateBlogPostData","showComment","mutations","setFeedData","setFeedType","news","set","delete"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,yBAAvC;AACA,SACEC,WADF,EAEEC,cAAc,IAAdA,eAFF,EAGEC,WAHF,QAIO,8BAJP;AAKA,SAASC,kBAAT,QAAmC,wBAAnC;AACA,SACEC,gBADF,EAEEC,eAFF,QAGO,sCAHP;AAIA,SAASC,UAAT,QAA2B,oCAA3B;AACA,SAASC,YAAT,QAA6B,wCAA7B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,kBAA5C;AAEA,IAAMC,WAAW,GAAG,CAApB;AAEA,IAAMC,KAAK,GAAG;AACZC,EAAAA,IAAI,EAAE,IADM;AAEZC,EAAAA,WAAW,EAAEH,WAFD;AAGZI,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAS,EAAE,EAAb;AAAiBC,IAAAA,EAAE,EAAE,CAArB;AAAwBC,IAAAA,IAAI,EAAE,EAA9B;AAAkCC,IAAAA,cAAc,EAAE;AAAlD;AAHM,CAAd;AAMA,IAAMC,OAAO,GAAG;AACd;AACMC,EAAAA,WAFQ,oCAE0C;AAAA,QAApCC,MAAoC,QAApCA,MAAoC;AAAA,QAA5BC,QAA4B,QAA5BA,QAA4B;AAAA,QAAdC,IAAc,SAAdA,IAAc;AAAA,QAARX,IAAQ,SAARA,IAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACtDS,cAAAA,MAAM,CAAC,aAAD,EAAgBE,IAAhB,CAAN;AACAD,cAAAA,QAAQ,CAAC,aAAD,EAAgB;AAAEE,gBAAAA,UAAU,EAAED,IAAd;AAAoBX,gBAAAA,IAAI,EAAJA;AAApB,eAAhB,CAAR;;AAFsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGvD,GALa;AAMRa,EAAAA,WANQ,qCAMsC;AAAA,QAAhCJ,MAAgC,SAAhCA,MAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAApBT,cAAAA,IAAoB,SAApBA,IAAoB,EAAXc,OAAW;AAAA;AAAA,6BAGxCd,IAHwC;AAAA,gDAIzCd,SAAS,CAAC6B,IAJ+B,wBAOzC7B,SAAS,CAAC8B,SAP+B,wBAUzC9B,SAAS,CAAC+B,MAV+B,wBAazC/B,SAAS,CAACgC,KAb+B,yBAgBzChC,SAAS,CAACiC,QAhB+B;AAAA;;AAAA;AAK5CC,cAAAA,OAAO,GAAG9B,WAAV;AAL4C;;AAAA;AAQ5C8B,cAAAA,OAAO,GAAGzB,YAAV;AAR4C;;AAAA;AAW5CyB,cAAAA,OAAO,GAAG7B,kBAAV;AAX4C;;AAAA;AAc5C6B,cAAAA,OAAO,GAAG5B,gBAAV;AAd4C;;AAAA;AAiB5C4B,cAAAA,OAAO,GAAG3B,eAAV;AAjB4C;;AAAA;AAoB5C2B,cAAAA,OAAO,GAAGjC,WAAV;AApB4C;;AAAA;AAAA;AAAA,qBAuB7BiC,OAAO,CAACN,OAAD,CAvBsB;;AAAA;AAuB1CZ,cAAAA,IAvB0C;AAyBhDO,cAAAA,MAAM,CAAC,aAAD,EAAgBT,IAAhB,CAAN;AACAS,cAAAA,MAAM,CAAC,aAAD,EAAgBP,IAAhB,CAAN;AA1BgD;AAAA;;AAAA;AAAA;AAAA;;AAAA,oBA4B5C,aAAEmB,QAAF,CAAWC,MAAX,KAAsB,GA5BsB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA,gDA+BvC,KA/BuC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCnD,GAxCa;AAyCRjC,EAAAA,cAzCQ,wCAyC2C;AAAA,QAAlCoB,MAAkC,SAAlCA,MAAkC;AAAA,QAA1BV,KAA0B,SAA1BA,KAA0B;AAAA,QAAfK,EAAe,SAAfA,EAAe;AAAA,QAAXU,OAAW,SAAXA,OAAW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACjDS,cAAAA,KADiD,GACzC1B,YAAY,CAACO,EAAD,EAAKL,KAAK,CAACG,IAAN,CAAWC,SAAhB,CAD6B;;AAAA,mBAGnDP,aAAa,CAAC2B,KAAD,CAHsC;AAAA;AAAA;AAAA;;AAAA;AAAA,qBAI/ClC,eAAc,CAACe,EAAD,EAAKU,OAAL,CAJiC;;AAAA;AAKrDL,cAAAA,MAAM,CAAC,gBAAD,EAAmBc,KAAnB,CAAN;;AALqD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOxD,GAhDa;AAiDRC,EAAAA,kBAjDQ,qCAiD8BpB,EAjD9B,EAiDkC;AAAA,QAArBK,MAAqB,SAArBA,MAAqB;AAAA,QAAbV,KAAa,SAAbA,KAAa;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACzCA,KAAK,CAACG,IAAN,CAAWC,SAD8B;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAGxCoB,cAAAA,KAHwC,GAGhC1B,YAAY,CAACO,EAAD,EAAKL,KAAK,CAACG,IAAN,CAAWC,SAAhB,CAHoB;;AAAA,mBAK1CP,aAAa,CAAC2B,KAAD,CAL6B;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA,qBAOhCnC,WAAW,CAACgB,EAAD,CAPqB;;AAAA;AAAA;AAAA;AAAA,6BAQtCL,KAAK,CAACC,IAAN,KAAed,SAAS,CAACiC,QARa;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,qBASrBzB,UAAU,CAC3BK,KAAK,CAACG,IAAN,CAAWC,SAAX,CAAqBoB,KAArB,EAA4BE,WAA5B,CAAwCrB,EADb,CATW;;AAAA;AAAA;AAAA;AASxCqB,gBAAAA,WATwC;AAAA;;AAAA;AAAA;AAMtCX,cAAAA,OANsC;AAc5CL,cAAAA,MAAM,CAAC,oBAAD,EAAuB;AAAEc,gBAAAA,KAAK,EAALA,KAAF;AAAST,gBAAAA,OAAO,EAAPA;AAAT,eAAvB,CAAN;;AAd4C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAgB/C;AAjEa,CAAhB;AAoEA,IAAMY,SAAS,GAAG;AAChBlB,EAAAA,WADgB,uBACJT,KADI,EACGY,IADH,EACS;AACvBZ,IAAAA,KAAK,CAACE,WAAN,GAAoBU,IAAI,IAAIb,WAA5B;AACD,GAHe;AAIhB6B,EAAAA,WAJgB,uBAIJ5B,KAJI,EAIGe,OAJH,EAIY;AAC1Bf,IAAAA,KAAK,CAACG,IAAN,GAAaY,OAAb;AACD,GANe;AAOhBc,EAAAA,WAPgB,uBAOJ7B,KAPI,EAOGC,IAPH,EAOS;AACvBD,IAAAA,KAAK,CAACC,IAAN,GAAaA,IAAI,IAAId,SAAS,CAAC2C,IAA/B;AACD,GATe;AAUhBL,EAAAA,kBAVgB,8BAUGzB,KAVH,SAU8B;AAAA,QAAlBwB,KAAkB,SAAlBA,KAAkB;AAAA,QAAXT,OAAW,SAAXA,OAAW;;AAC5C;AACA7B,IAAAA,GAAG,CAAC6C,GAAJ,CAAQ/B,KAAK,CAACG,IAAN,CAAWC,SAAnB,EAA8BoB,KAA9B,EAAqCT,OAArC;AACD,GAbe;;AAchB;AACAzB,EAAAA,cAfgB,0BAeDU,KAfC,EAeMwB,KAfN,EAea;AAC3BtC,IAAAA,GAAG,CAAC8C,MAAJ,CAAWhC,KAAK,CAACG,IAAN,CAAWC,SAAtB,EAAiCoB,KAAjC;AACD;AAjBe,CAAlB;AAoBA,eAAe;AACbxB,EAAAA,KAAK,EAALA,KADa;AAEbQ,EAAAA,OAAO,EAAPA,OAFa;AAGbmB,EAAAA,SAAS,EAATA;AAHa,CAAf","sourcesContent":["import Vue from 'vue';\r\nimport { feedTypes, getNewsFeed } from '@/services/feed.service';\r\nimport {\r\n  getBlogPost,\r\n  deleteBlogPost,\r\n  getBlogData\r\n} from '@/services/Blog/blog.service';\r\nimport { getTaggedBlogPosts } from '@/services/tag.service';\r\nimport {\r\n  getBlogPostLikes,\r\n  getCommentLikes\r\n} from '@/services/BlogPost/blogPost.service';\r\nimport { getComment } from '@/services/Comment/comment.service';\r\nimport { getCommunity } from '@/services/Community/community.service';\r\nimport { isIndexExists, getIndexById } from '@/utils/array.js';\r\n\r\nconst defaultPage = 1;\r\n\r\nconst state = {\r\n  type: null,\r\n  currentPage: defaultPage,\r\n  data: { BlogPosts: [], id: 0, Tags: [], communityRules: [] }\r\n};\r\n\r\nconst actions = {\r\n  /** @TODO move to @see 'src\\store\\modules\\blogPost.module.js' */\r\n  async setFeedPage({ commit, dispatch }, { page, type }) {\r\n    commit('setFeedPage', page);\r\n    dispatch('getFeedData', { pagination: page, type });\r\n  },\r\n  async getFeedData({ commit }, { type, ...payload }) {\r\n    let getData;\r\n    try {\r\n      switch (type) {\r\n        case feedTypes.blog:\r\n          getData = getBlogData;\r\n          break;\r\n        case feedTypes.community:\r\n          getData = getCommunity;\r\n          break;\r\n        case feedTypes.tagged:\r\n          getData = getTaggedBlogPosts;\r\n          break;\r\n        case feedTypes.likes:\r\n          getData = getBlogPostLikes;\r\n          break;\r\n        case feedTypes.comments:\r\n          getData = getCommentLikes;\r\n          break;\r\n        default:\r\n          getData = getNewsFeed;\r\n          break;\r\n      }\r\n      const data = await getData(payload);\r\n\r\n      commit('setFeedType', type);\r\n      commit('setFeedData', data);\r\n    } catch (e) {\r\n      if (e.response.status === 404) {\r\n        throw e;\r\n      } else {\r\n        return false;\r\n      }\r\n    }\r\n  },\r\n  async deleteBlogPost({ commit, state }, { id, payload }) {\r\n    const index = getIndexById(id, state.data.BlogPosts);\r\n\r\n    if (isIndexExists(index)) {\r\n      await deleteBlogPost(id, payload);\r\n      commit('deleteBlogPost', index);\r\n    }\r\n  },\r\n  async updateBlogPostData({ commit, state }, id) {\r\n    if (!state.data.BlogPosts) return;\r\n\r\n    const index = getIndexById(id, state.data.BlogPosts);\r\n\r\n    if (isIndexExists(index)) {\r\n      const payload = {\r\n        ...(await getBlogPost(id)),\r\n        ...(state.type === feedTypes.comments && {\r\n          showComment: await getComment(\r\n            state.data.BlogPosts[index].showComment.id\r\n          )\r\n        })\r\n      };\r\n      commit('updateBlogPostData', { index, payload });\r\n    }\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setFeedPage(state, page) {\r\n    state.currentPage = page || defaultPage;\r\n  },\r\n  setFeedData(state, payload) {\r\n    state.data = payload;\r\n  },\r\n  setFeedType(state, type) {\r\n    state.type = type || feedTypes.news;\r\n  },\r\n  updateBlogPostData(state, { index, payload }) {\r\n    /** @TODO fix newsfeed it's 'blogPosts' there */\r\n    Vue.set(state.data.BlogPosts, index, payload);\r\n  },\r\n  /** @TODO revise delete issue */\r\n  deleteBlogPost(state, index) {\r\n    Vue.delete(state.data.BlogPosts, index);\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}