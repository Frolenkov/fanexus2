{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Projects\\fanexus\\src\\mixins\\validation.mixin.js","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\mixins\\validation.mixin.js","mtime":1591263528335},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBtZXNzYWdlczogewogICAgICAgIHBhc3N3b3Jkc01hdGNoOiAnUGFzc3dvcmRzIG11c3QgbWF0Y2gnCiAgICAgIH0sCiAgICAgIGVycm9yczoge30KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGVja1Bhc3N3b3JkczogZnVuY3Rpb24gY2hlY2tQYXNzd29yZHMoZm9ybURhdGEsIHJlZnMpIHsKICAgICAgdmFyIHBhc3N3b3Jkc01hdGNoID0gdGhpcy5tZXNzYWdlcy5wYXNzd29yZHNNYXRjaDsKICAgICAgdmFyIHBhc3N3b3JkID0gZm9ybURhdGEucGFzc3dvcmQsCiAgICAgICAgICBwYXNzd29yZENvbmZpcm0gPSBmb3JtRGF0YS5wYXNzd29yZENvbmZpcm07CiAgICAgIHZhciBwYXNzd29yZENvbmZpcm1SZWYgPSByZWZzLnBhc3N3b3JkQ29uZmlybVJlZjsKICAgICAgaWYgKCFwYXNzd29yZENvbmZpcm1SZWYpIHJldHVybjsKICAgICAgdmFyIG1lc3NhZ2UgPSBwYXNzd29yZCAhPT0gcGFzc3dvcmRDb25maXJtID8gcGFzc3dvcmRzTWF0Y2ggOiAnJzsKCiAgICAgIGlmIChtZXNzYWdlKSB7CiAgICAgICAgdGhpcy4kc2V0KHRoaXMuZXJyb3JzLCAncGFzc3dvcmQnLCB7CiAgICAgICAgICBtYXRjaDogbWVzc2FnZQogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuJGRlbGV0ZSh0aGlzLmVycm9ycywgJ3Bhc3N3b3JkJyk7CiAgICAgIH0KCiAgICAgIHZhciBpbnB1dCA9IHBhc3N3b3JkQ29uZmlybVJlZi4kZWwucXVlcnlTZWxlY3RvcignaW5wdXQnKTsKCiAgICAgIGlmIChpbnB1dCkgewogICAgICAgIGlucHV0LnNldEN1c3RvbVZhbGlkaXR5KG1lc3NhZ2UpOwogICAgICB9CgogICAgICByZXR1cm4gIW1lc3NhZ2U7CiAgICB9LAogICAgY2hlY2tDbGllbnRWYWxpZGF0aW9uOiBmdW5jdGlvbiBjaGVja0NsaWVudFZhbGlkYXRpb24oX3JlZikgewogICAgICB2YXIgX3JlZiRmb3JtRGF0YSA9IF9yZWYuZm9ybURhdGEsCiAgICAgICAgICBmb3JtRGF0YSA9IF9yZWYkZm9ybURhdGEgPT09IHZvaWQgMCA/IHRoaXMuZm9ybURhdGEgOiBfcmVmJGZvcm1EYXRhLAogICAgICAgICAgcmVmcyA9IF9yZWYucmVmczsKICAgICAgaWYgKCFmb3JtRGF0YSkgcmV0dXJuIGZhbHNlOwoKICAgICAgaWYgKHJlZnMgJiYgcmVmcy5wYXNzd29yZENvbmZpcm1SZWYgJiYgZm9ybURhdGEucGFzc3dvcmQgJiYgZm9ybURhdGEucGFzc3dvcmRDb25maXJtKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuY2hlY2tQYXNzd29yZHMoZm9ybURhdGEsIHJlZnMpOwogICAgICB9CgogICAgICByZXR1cm4gdHJ1ZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["F:/Projects/fanexus/src/mixins/validation.mixin.js"],"names":["data","messages","passwordsMatch","errors","methods","checkPasswords","formData","refs","password","passwordConfirm","passwordConfirmRef","message","$set","match","$delete","input","$el","querySelector","setCustomValidity","checkClientValidation"],"mappings":"AAAA,eAAe;AACbA,EAAAA,IADa,kBACN;AACL,WAAO;AACLC,MAAAA,QAAQ,EAAE;AACRC,QAAAA,cAAc,EAAE;AADR,OADL;AAILC,MAAAA,MAAM,EAAE;AAJH,KAAP;AAMD,GARY;AASbC,EAAAA,OAAO,EAAE;AACPC,IAAAA,cADO,0BACQC,QADR,EACkBC,IADlB,EACwB;AAAA,UACrBL,cADqB,GACF,KAAKD,QADH,CACrBC,cADqB;AAAA,UAErBM,QAFqB,GAESF,QAFT,CAErBE,QAFqB;AAAA,UAEXC,eAFW,GAESH,QAFT,CAEXG,eAFW;AAAA,UAGrBC,kBAHqB,GAGEH,IAHF,CAGrBG,kBAHqB;AAI7B,UAAI,CAACA,kBAAL,EAAyB;AACzB,UAAMC,OAAO,GAAGH,QAAQ,KAAKC,eAAb,GAA+BP,cAA/B,GAAgD,EAAhE;;AAEA,UAAIS,OAAJ,EAAa;AACX,aAAKC,IAAL,CAAU,KAAKT,MAAf,EAAuB,UAAvB,EAAmC;AAAEU,UAAAA,KAAK,EAAEF;AAAT,SAAnC;AACD,OAFD,MAEO;AACL,aAAKG,OAAL,CAAa,KAAKX,MAAlB,EAA0B,UAA1B;AACD;;AACD,UAAMY,KAAK,GAAGL,kBAAkB,CAACM,GAAnB,CAAuBC,aAAvB,CAAqC,OAArC,CAAd;;AACA,UAAIF,KAAJ,EAAW;AACTA,QAAAA,KAAK,CAACG,iBAAN,CAAwBP,OAAxB;AACD;;AAED,aAAO,CAACA,OAAR;AACD,KAnBM;AAoBPQ,IAAAA,qBApBO,uCAoBmD;AAAA,+BAAlCb,QAAkC;AAAA,UAAlCA,QAAkC,8BAAvB,KAAKA,QAAkB;AAAA,UAARC,IAAQ,QAARA,IAAQ;AACxD,UAAI,CAACD,QAAL,EAAe,OAAO,KAAP;;AAEf,UACEC,IAAI,IACJA,IAAI,CAACG,kBADL,IAEAJ,QAAQ,CAACE,QAFT,IAGAF,QAAQ,CAACG,eAJX,EAKE;AACA,eAAO,KAAKJ,cAAL,CAAoBC,QAApB,EAA8BC,IAA9B,CAAP;AACD;;AAED,aAAO,IAAP;AACD;AAjCM;AATI,CAAf","sourcesContent":["export default {\r\n  data() {\r\n    return {\r\n      messages: {\r\n        passwordsMatch: 'Passwords must match'\r\n      },\r\n      errors: {}\r\n    };\r\n  },\r\n  methods: {\r\n    checkPasswords(formData, refs) {\r\n      const { passwordsMatch } = this.messages;\r\n      const { password, passwordConfirm } = formData;\r\n      const { passwordConfirmRef } = refs;\r\n      if (!passwordConfirmRef) return;\r\n      const message = password !== passwordConfirm ? passwordsMatch : '';\r\n\r\n      if (message) {\r\n        this.$set(this.errors, 'password', { match: message });\r\n      } else {\r\n        this.$delete(this.errors, 'password');\r\n      }\r\n      const input = passwordConfirmRef.$el.querySelector('input');\r\n      if (input) {\r\n        input.setCustomValidity(message);\r\n      }\r\n\r\n      return !message;\r\n    },\r\n    checkClientValidation({ formData = this.formData, refs }) {\r\n      if (!formData) return false;\r\n\r\n      if (\r\n        refs &&\r\n        refs.passwordConfirmRef &&\r\n        formData.password &&\r\n        formData.passwordConfirm\r\n      ) {\r\n        return this.checkPasswords(formData, refs);\r\n      }\r\n\r\n      return true;\r\n    }\r\n  }\r\n};\r\n"]}]}