{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js??ref--13-0!F:\\Projects\\fanexus\\src\\store\\modules\\privacy-group.module.js","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\store\\modules\\privacy-group.module.js","mtime":1597735669278},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["F:/Projects/fanexus/src/store/modules/privacy-group.module.js"],"names":["getPrivacyGroup","getPrivacyGroups","createPrivacyGroup","updatePrivacyGroup","removePrivacyGroup","addAliasesToPrivacyGroup","removeAliasesFromPrivacyGroup","addPrivacyGroupToPrivacyGroup","removePrivacyGroupFromPrivacyGroup","getById","deleteItemById","state","list","actions","setPrivacyGroups","commit","privacyGroup","aliases","subsets","loaded","loadData","id","data","Aliases","containsAccessControlGroups","map","subset","privacyGroups","rootState","name","isDefault","accessControlSetting","belongsToAliasId","alias","activeAliasId","newPrivacyGroup","params","payload","clearTimeout","timeout","timeoutDelay","setTimeout","deletePrivacyGroup","index","addMember","removeMember","addSubset","addAccessControlIds","removeSubset","removeAccessControlIds","mutations","addPrivacyGroup","push","Object","assign","splice","indexOf"],"mappings":"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","sourcesContent":["import {\r\n  getPrivacyGroup,\r\n  getPrivacyGroups,\r\n  createPrivacyGroup,\r\n  updatePrivacyGroup,\r\n  removePrivacyGroup,\r\n  addAliasesToPrivacyGroup,\r\n  removeAliasesFromPrivacyGroup,\r\n  addPrivacyGroupToPrivacyGroup,\r\n  removePrivacyGroupFromPrivacyGroup\r\n} from '@/services/privacy-group.service';\r\n\r\nimport { getById, deleteItemById } from '@/utils/array.js';\r\n\r\nconst state = {\r\n  list: []\r\n};\r\n\r\nconst actions = {\r\n  async setPrivacyGroups({ commit }) {\r\n    try {\r\n      const privacyGroups = (await getPrivacyGroups()).map(privacyGroup => ({\r\n        ...privacyGroup,\r\n        aliases: [],\r\n        subsets: [],\r\n        loaded: false,\r\n        async loadData() {\r\n          const data = await getPrivacyGroup(this.id);\r\n          this.aliases = data.Aliases;\r\n          this.subsets = data.containsAccessControlGroups.map(subset =>\r\n            getById(subset.id, privacyGroups)\r\n          );\r\n        }\r\n      }));\r\n      commit('setPrivacyGroups', privacyGroups);\r\n    } catch (e) {\r\n      commit('setPrivacyGroups', []);\r\n    }\r\n  },\r\n  async createPrivacyGroup({ commit, rootState }) {\r\n    const newPrivacyGroup = {\r\n      ...(await createPrivacyGroup({\r\n        name: 'new privacy group',\r\n        isDefault: false,\r\n        accessControlSetting: 1,\r\n        belongsToAliasId: rootState.alias.activeAliasId\r\n      })),\r\n      aliases: [],\r\n      subsets: [],\r\n      loaded: true\r\n    };\r\n    commit('addPrivacyGroup', newPrivacyGroup);\r\n    return newPrivacyGroup;\r\n  },\r\n  async updatePrivacyGroup({ commit }, { privacyGroup, params }) {\r\n    const payload = [privacyGroup.id, params];\r\n    clearTimeout(this.timeout);\r\n    const timeoutDelay = 1000;\r\n    this.timeout = setTimeout(\r\n      async () => await updatePrivacyGroup(...payload),\r\n      timeoutDelay\r\n    );\r\n    commit('updatePrivacyGroup', { privacyGroup, params });\r\n  },\r\n  async deletePrivacyGroup({ commit }, { id, index }) {\r\n    await removePrivacyGroup(id);\r\n    commit('removePrivacyGroup', index);\r\n  },\r\n  async addMember({ commit }, { privacyGroup, alias }) {\r\n    const payload = [privacyGroup.id, { aliases: [alias.id] }];\r\n    await addAliasesToPrivacyGroup(...payload);\r\n    commit('addMember', { privacyGroup, alias });\r\n  },\r\n  async removeMember({ commit }, { privacyGroup, alias }) {\r\n    const payload = [privacyGroup.id, { aliases: [alias.id] }];\r\n    await removeAliasesFromPrivacyGroup(...payload);\r\n    commit('removeMember', { privacyGroup, alias });\r\n  },\r\n  async addSubset({ commit }, { privacyGroup, subset }) {\r\n    await addPrivacyGroupToPrivacyGroup(privacyGroup.id, {\r\n      addAccessControlIds: [subset.id]\r\n    });\r\n    commit('addSubset', { privacyGroup, subset });\r\n  },\r\n  async removeSubset({ commit }, { privacyGroup, subset }) {\r\n    await removePrivacyGroupFromPrivacyGroup(privacyGroup.id, {\r\n      removeAccessControlIds: [subset.id]\r\n    });\r\n    commit('removeSubset', { privacyGroup, subset });\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setPrivacyGroups(state, privacyGroups) {\r\n    state.list = privacyGroups;\r\n  },\r\n  addPrivacyGroup(state, privacyGroup) {\r\n    state.list.push(privacyGroup);\r\n  },\r\n  updatePrivacyGroup(state, { privacyGroup, params }) {\r\n    Object.assign(privacyGroup, params);\r\n  },\r\n  removePrivacyGroup(state, index) {\r\n    state.list.splice(index, 1);\r\n  },\r\n  addMember(state, { privacyGroup, alias }) {\r\n    privacyGroup.aliases.push(alias);\r\n  },\r\n  removeMember(state, { privacyGroup, alias }) {\r\n    deleteItemById(alias.id, privacyGroup.aliases);\r\n  },\r\n  addSubset(state, { privacyGroup, subset }) {\r\n    privacyGroup.subsets.push(subset);\r\n  },\r\n  removeSubset(state, { privacyGroup, subset }) {\r\n    privacyGroup.subsets.splice(privacyGroup.subsets.indexOf(subset), 1);\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}