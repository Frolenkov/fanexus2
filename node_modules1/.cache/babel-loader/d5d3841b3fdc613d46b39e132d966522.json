{"remainingRequest":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!F:\\Projects\\fanexus\\src\\components\\Blog\\BlogPost.vue?vue&type=script&lang=js&","dependencies":[{"path":"F:\\Projects\\fanexus\\src\\components\\Blog\\BlogPost.vue","mtime":1595221465012},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"F:\\Projects\\fanexus\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["BlogPost.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <article class=\"blog-post\" ref=\"blogPost\" :style=\"styleObject\">\r\n    <div class=\"blog-post__wrapper\" ref=\"wrapper\">\r\n      <header class=\"blog-post__header\" slot=\"header\">\r\n        <author-title\r\n          class=\"blog-post__header-title\"\r\n          @click.native.prevent=\"openBlogPostModal\"\r\n          :name=\"data.Alias.name\"\r\n          :image=\"data.Alias.avatar.src\"\r\n          :date=\"data.updatedAt\"\r\n          :alt=\"data.Alias.avatar.alt\"\r\n        />\r\n        <tags-list\r\n          v-if=\"data && data.Tags\"\r\n          :list=\"data.Tags\"\r\n          @click.native.prevent\r\n          :disabled=\"disabled\"\r\n          @close=\"$emit('close')\"\r\n        />\r\n      </header>\r\n      <div class=\"blog-post__body\">\r\n        <img\r\n          class=\"blog-post__body-image\"\r\n          v-if=\"data && data.image\"\r\n          :src=\"data.image.src\"\r\n          :alt=\"data.image.name\"\r\n        />\r\n        <p\r\n          class=\"blog-post__body-content\"\r\n          @click.prevent=\"openBlogPostModal\"\r\n          v-html=\"data.content\"\r\n        />\r\n      </div>\r\n      <action-buttons-group\r\n        v-if=\"showActionButtons\"\r\n        :engagementStats=\"data.engagementStats\"\r\n        :userHasEditPermissions=\"data.userHasEditPermissions\"\r\n        @click.native.prevent\r\n        @likeClicked=\"postLikeToggle\"\r\n        @delete=\"deleteBlogPostHandler\"\r\n        @edit=\"editBlogPostHandler\"\r\n        :userLiked=\"data.userLiked\"\r\n        :options=\"dropdownOptions\"\r\n        :disabled=\"disabled\"\r\n        @close=\"$emit('close')\"\r\n        @openBlogPostModal=\"openBlogPostModal\"\r\n      />\r\n      <comments\r\n        slot=\"footer\"\r\n        v-if=\"showComments\"\r\n        :blogPostId=\"data.id\"\r\n        :newComment=\"newComment\"\r\n        :comments=\"data.Comments\"\r\n        @createComment=\"handleCreateComment\"\r\n        @newCommentInput=\"$newComment => (newComment = $newComment)\"\r\n      />\r\n    </div>\r\n  </article>\r\n</template>\r\n\r\n<script>\r\nimport { mapState, mapActions } from 'vuex';\r\nimport { postLike, postUnlike } from '@/services/Blog/blog.service';\r\nimport dropdownOptions from '@/services/BlogPost/blogPost.dropdownOptions';\r\nimport { createComment } from '@/services/Comment/comment.service';\r\nimport Comments from '@/components/common/Comments/Comments';\r\nimport AuthorTitle from '~common/AuthorTitle';\r\nimport TagsList from '~common/TagsList';\r\nimport ActionButtonsGroup from '~common/ActionButtonsGroup';\r\nimport resizeMixin from '@/mixins/resize.mixin';\r\n\r\nexport default {\r\n  props: {\r\n    data: {\r\n      type: Object,\r\n      required: true\r\n    },\r\n    showComments: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    showActionButtons: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    disabled: {\r\n      type: Boolean,\r\n      default: false\r\n    },\r\n    masonry: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    usedInModal: {\r\n      type: Boolean,\r\n      default: false\r\n    }\r\n  },\r\n  components: {\r\n    AuthorTitle,\r\n    TagsList,\r\n    ActionButtonsGroup,\r\n    Comments\r\n  },\r\n  mixins: [resizeMixin],\r\n  data() {\r\n    return {\r\n      newComment: '',\r\n      dropdownOptions,\r\n      isMounted: false\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions(['updateBlogPostData', 'deleteBlogPost', 'setEditBlogPost']),\r\n    async deleteBlogPostHandler() {\r\n      await this.deleteBlogPost({\r\n        id: this.data.id,\r\n        payload: { alias: this.activeAliasId }\r\n      });\r\n    },\r\n    editBlogPostHandler() {\r\n      this.setEditBlogPost(this.data);\r\n    },\r\n    /** @TODO make it common */\r\n    async refresh() {\r\n      await this.updateBlogPostData(this.data.id);\r\n      this.newComment = '';\r\n    },\r\n    /*@TODO make it dynamic and revise do we need comment id*/\r\n    async handleCreateComment(parentComment) {\r\n      if (!this.newComment) return;\r\n\r\n      const payload = {\r\n        alias: this.activeAliasId,\r\n        content: this.newComment\r\n      };\r\n      if (parentComment) {\r\n        payload.parentComment = parentComment;\r\n      } else {\r\n        payload.blogPost = this.data.id;\r\n      }\r\n\r\n      try {\r\n        await createComment(payload);\r\n        await this.refresh();\r\n      } catch (e) {\r\n        return false;\r\n      }\r\n    },\r\n    openBlogPostModal() {\r\n      /** @TODO temp solution, revise to use prop like \"inModal\" */\r\n      if (this.showComments) return;\r\n      return this.$router.push({\r\n        name: `${this.$route.name}-with-blog-post`,\r\n        params: {\r\n          postId: this.data.id\r\n        }\r\n      });\r\n    },\r\n    async postLikeToggle() {\r\n      const { id, userLiked } = this.data;\r\n      const body = [id, { alias: this.activeAliasId }];\r\n\r\n      userLiked ? await postUnlike(...body) : await postLike(...body);\r\n      await this.refresh();\r\n    }\r\n  },\r\n  computed: {\r\n    ...mapState({\r\n      userData: state => state.auth.userData,\r\n      activeAliasId: state => state.alias.activeAliasId\r\n    }),\r\n    styleObject() {\r\n      if (\r\n        (!this.resizeCounter && !this.isMounted) ||\r\n        !this.masonry ||\r\n        this.usedInModal\r\n      )\r\n        return;\r\n      /** @TODO take those from the variable @see https://temperance-software.atlassian.net/browse/FAN-219 */\r\n      const rowHeight = 20; // It's from NewsFeed.vue .feed-news grid-auto-rows\r\n      const rowGap = 15; // It's from NewsFeed.vue .feed-news grid-gap\r\n      const rowSpan = Math.ceil(\r\n        (this.$refs.wrapper.clientHeight + rowGap) / (rowHeight + rowGap)\r\n      );\r\n      return {\r\n        gridRowEnd: `span ${rowSpan}`\r\n      };\r\n    }\r\n  },\r\n  mounted() {\r\n    this.isMounted = true;\r\n    this.resizeObserver(this.$refs.wrapper);\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.feed-news .blog-post {\r\n  &:hover {\r\n    box-shadow: var(--box-shadow);\r\n    /** @TODO revise styles */\r\n    // cursor: pointer;\r\n  }\r\n}\r\n.blog-post {\r\n  background-color: var(--BG-blog-post);\r\n  border-radius: var(--border-radius);\r\n  transition: var(--transition-default);\r\n  &__header {\r\n    margin: 0 var(--element-margin-l);\r\n    padding-top: var(--element-padding-l);\r\n    &-title {\r\n      cursor: pointer;\r\n    }\r\n  }\r\n  &__body {\r\n    &-image {\r\n      width: 100%;\r\n      height: auto;\r\n      object-fit: cover;\r\n    }\r\n    &-content {\r\n      color: var(--text-primary);\r\n      font-size: var(--size-regular);\r\n      line-height: 1.3em;\r\n      margin-bottom: var(--element-margin-m);\r\n      padding: 0 var(--element-padding-m);\r\n      word-break: break-word;\r\n      cursor: pointer;\r\n\r\n      /** @TODO revise styles */\r\n      ::v-deep {\r\n        a {\r\n          color: var(--text-secondary);\r\n          display: block;\r\n          max-width: 100%;\r\n          overflow: hidden;\r\n          text-overflow: ellipsis;\r\n        }\r\n        h1,\r\n        h2 {\r\n          line-height: 1.5em;\r\n        }\r\n\r\n        ul {\r\n          padding-left: var(--element-padding-xl);\r\n        }\r\n\r\n        img {\r\n          margin: var(--element-margin-s) 0;\r\n        }\r\n\r\n        blockquote {\r\n          padding-left: var(--element-padding-s);\r\n          border-left: var(--border-width-default) solid\r\n            var(--border-group-normal);\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/Blog"}]}