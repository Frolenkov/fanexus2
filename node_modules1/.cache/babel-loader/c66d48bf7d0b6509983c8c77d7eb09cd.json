{"remainingRequest":"I:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js!I:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js??ref--13-0!I:\\Projects\\fanexus\\src\\store\\modules\\feed.module.js","dependencies":[{"path":"I:\\Projects\\fanexus\\src\\store\\modules\\feed.module.js","mtime":1593701750468},{"path":"I:\\Projects\\fanexus\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"I:\\Projects\\fanexus\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["I:/Projects/fanexus/src/store/modules/feed.module.js"],"names":["Vue","router","feedTypes","getNewsFeed","getBlogPost","deleteBlogPost","getBlogData","getCommunity","isIndexExists","getIndexById","defaultPage","state","type","currentPage","data","getters","getBlogPostIndexById","id","BlogPosts","actions","navigateAndSetBlogPostId","dispatch","currentRoute","meta","createPost","push","name","params","postId","page","undefined","root","setFeedPage","commit","pagination","getFeedData","payload","blog","community","getData","index","updateBlogPostData","mutations","setFeedData","setFeedType","news","set","delete"],"mappings":"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","sourcesContent":["import Vue from 'vue';\r\nimport router from '@/router';\r\nimport { feedTypes, getNewsFeed } from '@/services/feed.service';\r\nimport {\r\n  getBlogPost,\r\n  deleteBlogPost,\r\n  getBlogData\r\n} from '@/services/Blog/blog.service';\r\nimport { getCommunity } from '@/services/Community/community.service';\r\nimport { isIndexExists, getIndexById } from '@/utils/array.js';\r\n\r\nconst defaultPage = 1;\r\n\r\nconst state = {\r\n  type: null,\r\n  currentPage: defaultPage,\r\n  data: {}\r\n};\r\n\r\nconst getters = {\r\n  getBlogPostIndexById: state => id => {\r\n    return getIndexById(id, state.data.BlogPosts);\r\n  }\r\n};\r\n\r\nconst actions = {\r\n  navigateAndSetBlogPostId({ dispatch }, id) {\r\n    if (router.currentRoute.meta.createPost) {\r\n      if (id) {\r\n        return router.push({\r\n          name: `${router.currentRoute.name}WithBlogPost`,\r\n          params: {\r\n            ...router.currentRoute.params,\r\n            postId: id\r\n          }\r\n        });\r\n      } else {\r\n        return router.push({\r\n          name: router.currentRoute.meta.page,\r\n          params: { ...router.currentRoute.params, postId: undefined }\r\n        });\r\n      }\r\n    } else {\r\n      dispatch('setBlogPostId', id, { root: true });\r\n    }\r\n  },\r\n  async setFeedPage({ commit, dispatch }, { page, type }) {\r\n    commit('setFeedPage', page);\r\n    dispatch('getFeedData', { pagination: page, type });\r\n  },\r\n  async getFeedData({ commit }, { type, ...payload }) {\r\n    let getData;\r\n    try {\r\n      switch (type) {\r\n        case feedTypes.blog:\r\n          getData = getBlogData;\r\n          break;\r\n        case feedTypes.community:\r\n          getData = getCommunity;\r\n          break;\r\n        default:\r\n          getData = getNewsFeed;\r\n          break;\r\n      }\r\n      const data = await getData(payload);\r\n\r\n      commit('setFeedType', type);\r\n      commit('setFeedData', data);\r\n    } catch (e) {\r\n      return false;\r\n    }\r\n  },\r\n  async deleteBlogPost({ commit, state }, { id, payload }) {\r\n    const index = getIndexById(id, state.data.BlogPosts);\r\n\r\n    if (isIndexExists(index)) {\r\n      await deleteBlogPost(id, payload);\r\n      commit('deleteBlogPost', index);\r\n    }\r\n  },\r\n  async updateBlogPostData({ commit, state }, id) {\r\n    if (!state.data.BlogPosts) return;\r\n\r\n    const index = getIndexById(id, state.data.BlogPosts);\r\n\r\n    if (isIndexExists(index)) {\r\n      const payload = await getBlogPost(id);\r\n      commit('updateBlogPostData', { index, payload });\r\n    }\r\n  }\r\n};\r\n\r\nconst mutations = {\r\n  setFeedPage(state, page) {\r\n    state.currentPage = page || defaultPage;\r\n  },\r\n  setFeedData(state, payload) {\r\n    state.data = payload;\r\n  },\r\n  setFeedType(state, type) {\r\n    state.type = type || feedTypes.news;\r\n  },\r\n  updateBlogPostData(state, { index, payload }) {\r\n    /** @TODO fix newsfeed it's 'blogPosts' there */\r\n    Vue.set(state.data.BlogPosts, index, payload);\r\n  },\r\n  /** @TODO revise delete issue */\r\n  deleteBlogPost(state, index) {\r\n    Vue.delete(state.data.BlogPosts, index);\r\n  }\r\n};\r\n\r\nexport default {\r\n  state,\r\n  getters,\r\n  actions,\r\n  mutations\r\n};\r\n"]}]}